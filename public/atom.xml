<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Like</title>
  
  <subtitle>哈哈哈</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liketea.xyz/"/>
  <updated>2019-05-03T12:29:11.916Z</updated>
  <id>https://liketea.xyz/</id>
  
  <author>
    <name>Like Wong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python操作MySQL——MySQLdb</title>
    <link href="https://liketea.xyz/Python/Python%E6%93%8D%E4%BD%9CMySQL%E2%80%94%E2%80%94MySQLdb/"/>
    <id>https://liketea.xyz/Python/Python操作MySQL——MySQLdb/</id>
    <published>2019-05-03T12:24:53.000Z</published>
    <updated>2019-05-03T12:29:11.916Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/hqdefault.jpg" alt></p><h2 id="快速指引"><a href="#快速指引" class="headerlink" title="快速指引"></a>快速指引</h2><p>MySQLdb 是用于Python链接Mysql数据库的接口，它实现了 Python 数据库 API 规范 V2.0，基于 MySQL C API 上建立的。</p><h3 id="MySQLdb安装"><a href="#MySQLdb安装" class="headerlink" title="MySQLdb安装"></a>MySQLdb安装</h3><p>在命令行中执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install mysql-python</span><br></pre></td></tr></table></figure><h3 id="MySQLdb使用"><a href="#MySQLdb使用" class="headerlink" title="MySQLdb使用"></a>MySQLdb使用</h3><p><a href="https://dev.mysql.com/doc/connector-python/en/connector-python-tutorial-cursorbuffered.html" target="_blank" rel="noopener">MySQLdb Tutorials</a></p><h4 id="MySQLdb-导入方式"><a href="#MySQLdb-导入方式" class="headerlink" title="MySQLdb 导入方式"></a><code>MySQLdb</code> 导入方式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> MySQLdb</span><br><span class="line"><span class="keyword">import</span> time</span><br></pre></td></tr></table></figure><h3 id="MySQLdb-一般流程"><a href="#MySQLdb-一般流程" class="headerlink" title="MySQLdb 一般流程"></a><code>MySQLdb</code> 一般流程</h3><p>Python通过MySQLdb操作MySQL数据库的一般过程：</p><blockquote><p>配置数据库参数-&gt;连接数据库-&gt;获取游标对象-&gt;构造SQL语句-&gt;执行SQL语句-&gt;提交事务(write)-&gt;关闭连接</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 配置数据库参数：参数字典</span></span><br><span class="line">conf = &#123;</span><br><span class="line">    <span class="string">'host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'port'</span>: <span class="number">3306</span>,</span><br><span class="line">    <span class="string">'user'</span>: <span class="string">'root'</span>,</span><br><span class="line">    <span class="string">'db'</span>: <span class="string">'didi'</span>,</span><br><span class="line">    <span class="string">'charset'</span>: <span class="string">'utf8'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 连接数据库：返回连接对象conn</span></span><br><span class="line">conn = MySQLdb.connect(**conf)</span><br><span class="line"><span class="keyword">print</span> conn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 获取游标对象：cursor</span></span><br><span class="line">cursor = conn.cursor(MySQLdb.cursors.DictCursor)</span><br><span class="line"><span class="keyword">print</span> cursor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 构造SQL语句和参数序列:</span></span><br><span class="line">sql_table_str = <span class="string">'g_team_combine_activity_city_map'</span></span><br><span class="line">sql_fields = [<span class="string">'id'</span>, <span class="string">'activity_id'</span>, <span class="string">'city_id'</span>, <span class="string">'create_time'</span>]</span><br><span class="line">sql_fields_str = <span class="string">'(&#123;&#125;)'</span>.format(<span class="string">','</span>.join(sql_fields))</span><br><span class="line">sql_values_str = <span class="string">'(&#123;&#125;)'</span>.format(<span class="string">','</span>.join([<span class="string">'%s'</span>] * len(sql_fields)))</span><br><span class="line">sql_stmt = <span class="string">"""INSERT INTO &#123;&#125; &#123;&#125; VALUES &#123;&#125;"""</span>.format(sql_table_str, sql_fields_str, sql_values_str)</span><br><span class="line">sql_data = [<span class="number">2000</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line"><span class="keyword">print</span> sql_stmt, sql_data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 执行SQL语句：返回受影响的条数，如果插入失败则回滚事务</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">print</span> cursor.execute(sql_stmt, sql_data)</span><br><span class="line">    conn.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    conn.rollback()</span><br><span class="line">    <span class="keyword">print</span> e</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 关闭连接</span></span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><pre><code>&lt;_mysql.connection open to &apos;127.0.0.1&apos; at 7f87bf2df620&gt;&lt;MySQLdb.cursors.DictCursor object at 0x10c13af90&gt;INSERT INTO g_team_combine_activity_city_map (id,activity_id,city_id,create_time) VALUES (%s,%s,%s,%s) [2000, 0, 0, 0](1062, &quot;Duplicate entry &apos;2000&apos; for key &apos;PRIMARY&apos;&quot;)</code></pre><h2 id="连接DB"><a href="#连接DB" class="headerlink" title="连接DB"></a>连接DB</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口是int，其他都是字符串</span></span><br><span class="line"><span class="comment"># MySQLdb.connect(host=主机, port=端口, user=用户名, passwd=密码, db=数据库, charset='utf8')</span></span><br><span class="line">conf = &#123;</span><br><span class="line">    <span class="string">'host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'port'</span>: <span class="number">3306</span>,</span><br><span class="line">    <span class="string">'user'</span>: <span class="string">'root'</span>,</span><br><span class="line">    <span class="string">'db'</span>: <span class="string">'didi'</span>,</span><br><span class="line">    <span class="string">'charset'</span>: <span class="string">'utf8'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conn = MySQLdb.connect(**conf)</span><br></pre></td></tr></table></figure><h2 id="获取游标"><a href="#获取游标" class="headerlink" title="获取游标"></a>获取游标</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 传入游标类型：决定了返回记录的类型，字典最常用</span></span><br><span class="line">cursor = conn.cursor(MySQLdb.cursors.DictCursor)</span><br></pre></td></tr></table></figure><h2 id="执行SQL"><a href="#执行SQL" class="headerlink" title="执行SQL"></a>执行SQL</h2><p>原型：<code>cursor.execute(query, args=None)</code> </p><p><code>query</code>查询语句和<code>args</code>数据参数需配合使用，总体上有三种使用方式：</p><ol><li>完整查询语句+数据参数None：<code>query</code>是一句完整可执行的SQL语句字符串 + <code>args</code>为None；</li><li>占位符查询语句+数据参数序列：<code>query</code>中含有占位符<code>%s</code>，<code>args</code> 为一个序列，执行时会先使用<code>args</code>中的值依次替换<code>query</code>中的占位符；</li><li>关键字占位符查询语句+数据参数字典：<code>query</code>中含有关键字占位符<code>%(key)s</code> ，<code>args</code> 为一个字典，执行时会先使用<code>args</code>按关键字替换<code>query</code>中的占位符；</li></ol><p>后两种方式是将参数作为最终要插入的值，然后代入到查询语句的，而不是先代入再用SQL语句计算其值。</p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><h4 id="执行查询语句"><a href="#执行查询语句" class="headerlink" title="执行查询语句"></a>执行查询语句</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式一</span></span><br><span class="line">sql1 = <span class="string">'select * from &#123;0&#125; where &#123;1&#125; &lt; &#123;2&#125;'</span>.format(</span><br><span class="line">    <span class="string">'g_team_combine_activity_city_map'</span>, <span class="string">'id'</span>, <span class="number">80</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回受影响的记录行数</span></span><br><span class="line">cursor.execute(sql1)</span><br></pre></td></tr></table></figure><pre><code>6L</code></pre><h4 id="获取查询结果"><a href="#获取查询结果" class="headerlink" title="获取查询结果"></a>获取查询结果</h4><p>每次获取查询结果，游标会自动后移。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 逐条获取记录：返回一个字典，每次获取，游标下移，无数据返回None</span></span><br><span class="line">data1 = cursor.fetchone()</span><br><span class="line"><span class="keyword">print</span> data1</span><br></pre></td></tr></table></figure><pre><code>{&apos;city_id&apos;: 1L, &apos;activity_id&apos;: 1L, &apos;create_time&apos;: 1556865052L, &apos;id&apos;: 1L}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取指定数目的记录：返回一个字典元组，每次读取，游标都会移动</span></span><br><span class="line">data2 = cursor.fetchmany(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">print</span> data2</span><br></pre></td></tr></table></figure><pre><code>({&apos;city_id&apos;: 3L, &apos;activity_id&apos;: 2L, &apos;create_time&apos;: 1556868188L, &apos;id&apos;: 2L}, {&apos;city_id&apos;: 1L, &apos;activity_id&apos;: 45L, &apos;create_time&apos;: 1505969474L, &apos;id&apos;: 5L})</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 返回全部结果，字典元组</span></span><br><span class="line">data3 = cursor.fetchall()</span><br><span class="line">data3</span><br></pre></td></tr></table></figure><pre><code>({&apos;activity_id&apos;: 71L, &apos;city_id&apos;: 35L, &apos;create_time&apos;: 1506402761L, &apos;id&apos;: 79L},)</code></pre><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><h4 id="单条插入"><a href="#单条插入" class="headerlink" title="单条插入"></a>单条插入</h4><p>‘INSERT INTO table_name (字段1，字段2,…,字段n)’ VALUES (值1，值2，…，值n)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式一：构造出完整SQL语句，注意这里的unix_timestamp(now())会被SQL执行</span></span><br><span class="line">sql4 = <span class="string">"""INSERT INTO g_team_combine_activity_city_map(</span></span><br><span class="line"><span class="string">                            id, activity_id, city_id, create_time)</span></span><br><span class="line"><span class="string">                            VALUES(11, 1, 1, unix_timestamp(now()))"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式二：占位符查询语句+数据参数序列，注意这里传递给%s的是最终的结果，因为如果传入SQL函数则不会在SQL中执行</span></span><br><span class="line">sql_stmt1 = <span class="string">"""INSERT INTO g_team_combine_activity_city_map(</span></span><br><span class="line"><span class="string">                            id,activity_id,city_id,create_time)</span></span><br><span class="line"><span class="string">                            VALUES(%s, %s, %s, %s)"""</span></span><br><span class="line"></span><br><span class="line">sql_data1 = [<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, time.time()]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式三：关键字占位符查询语句+数据参数字典</span></span><br><span class="line">sql_stmt2 = <span class="string">"""INSERT INTO g_team_combine_activity_city_map(</span></span><br><span class="line"><span class="string">                            id,activity_id,city_id,create_time)</span></span><br><span class="line"><span class="string">                            VALUES(%(id)s, %(activity_id)s, %(city_id)s, %(create_time)s)"""</span></span><br><span class="line"></span><br><span class="line">sql_data2 = &#123;</span><br><span class="line">    <span class="string">'id'</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">'activity_id'</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">'city_id'</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="string">'create_time'</span>: time.time()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行SQL语句，提交事务，如果提交失败则回滚</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    cursor.execute(sql_stmt2, sql_data2)</span><br><span class="line">    conn.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    conn.rollback()</span><br><span class="line">    <span class="keyword">print</span> e</span><br></pre></td></tr></table></figure><h4 id="批量插入"><a href="#批量插入" class="headerlink" title="批量插入"></a>批量插入</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 普通方式</span></span><br><span class="line">sql_stmt4 = <span class="string">"""INSERT INTO g_team_combine_activity_city_map</span></span><br><span class="line"><span class="string">                                (id,activity_id,city_id,create_time)</span></span><br><span class="line"><span class="string">                                VALUES</span></span><br><span class="line"><span class="string">                                &#123;&#125;"""</span>.format(<span class="string">','</span>.join([<span class="string">'(%s)'</span> % <span class="string">','</span>.join([<span class="string">'%s'</span>] * <span class="number">4</span>)] * <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">sql_data4 = [(<span class="number">1210</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),</span><br><span class="line">             (<span class="number">1211</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),</span><br><span class="line">             (<span class="number">1212</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)]</span><br><span class="line"></span><br><span class="line">sql_data4 = [tt <span class="keyword">for</span> t <span class="keyword">in</span> sql_data4 <span class="keyword">for</span> tt <span class="keyword">in</span> t]</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    cursor.execute(sql_stmt4, sql_data4)</span><br><span class="line">    conn.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    conn.rollback()</span><br><span class="line">    <span class="keyword">print</span> e</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># executemany，用于多行插入，效率比逐行插入更高</span></span><br><span class="line">sql_stmt3 = <span class="string">"""INSERT INTO g_team_combine_activity_city_map</span></span><br><span class="line"><span class="string">                                (id,activity_id,city_id,create_time)</span></span><br><span class="line"><span class="string">                                VALUES</span></span><br><span class="line"><span class="string">                                (%s, %s, %s, %s)"""</span></span><br><span class="line"></span><br><span class="line">sql_data3 = [(<span class="number">1205</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),</span><br><span class="line">             (<span class="number">1206</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),</span><br><span class="line">             (<span class="number">1207</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    cursor.executemany(sql_stmt3, sql_data3)</span><br><span class="line">    conn.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    conn.rollback()</span><br><span class="line">    <span class="keyword">print</span> e</span><br></pre></td></tr></table></figure><h3 id="更新操作"><a href="#更新操作" class="headerlink" title="更新操作"></a>更新操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sql_table_str = <span class="string">'g_team_combine_activity_city_map'</span></span><br><span class="line">sql_key_dict = &#123;<span class="string">'city_id'</span>:<span class="number">999</span>, <span class="string">'create_time'</span>: time.time()&#125;</span><br><span class="line">sql_eval_str = <span class="string">','</span>.join(<span class="string">'&#123;&#125; = &#123;&#125;'</span>.format(item[<span class="number">0</span>],item[<span class="number">1</span>]) <span class="keyword">for</span> item <span class="keyword">in</span> key_dict.items())</span><br><span class="line">sql_cond_str = <span class="string">'&#123;&#125;&gt;&#123;&#125;'</span>.format(<span class="string">'id'</span>, <span class="number">1100</span>)</span><br><span class="line"></span><br><span class="line">sql_stmt4 = <span class="string">"""UPDATE &#123;0&#125; SET &#123;1&#125; WHERE &#123;2&#125;"""</span>.format(table_str, eval_str, cond_str)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    cursor.execute(sql_stmt4)</span><br><span class="line">    conn.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    conn.rollback()</span><br><span class="line">    <span class="keyword">print</span> e</span><br></pre></td></tr></table></figure><h3 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sql_table_str = <span class="string">'g_team_combine_activity_city_map'</span></span><br><span class="line">sql_cond_str = <span class="string">'id &gt; 1200'</span> </span><br><span class="line">sql_stmt5 = <span class="string">"""DELETE FROM &#123;&#125; WHERE &#123;&#125;"""</span>.format(sql_table_str, sql_cond_str)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    cursor.execute(sql_stmt5)</span><br><span class="line">    conn.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    conn.rollback()</span><br><span class="line">    <span class="keyword">print</span> e</span><br></pre></td></tr></table></figure><h3 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">sql_stmt6 = <span class="string">"""</span></span><br><span class="line"><span class="string">CREATE TABLE `t_data_status` (</span></span><br><span class="line"><span class="string">  `f_id` int(10) NOT NULL AUTO_INCREMENT COMMENT '自增ID',</span></span><br><span class="line"><span class="string">  `f_app_id` varchar(32) NOT NULL COMMENT '合作方id',</span></span><br><span class="line"><span class="string">  `f_busi_id` varchar(32) NOT NULL DEFAULT 0 COMMENT '内部业务id',</span></span><br><span class="line"><span class="string">  `f_src_data_set` varchar(60) NOT NULL DEFAULT '' COMMENT '数据源,即分表名称, 包括基础表和业务基础数据表',</span></span><br><span class="line"><span class="string">  `f_des_data_set` varchar(60) NOT NULL DEFAULT '' COMMENT '数据目标,即各个副本表名称, 包括基础表和业务基础数据表',</span></span><br><span class="line"><span class="string">  `f_dataset_type_id` int(2) NOT NULL COMMENT '数据源类型dic_dataset_type f_id，字典:医院基础数据，科室基础数据, 医院挂号业务数据等, 通过dic_dataset_type的type知道这条数据是不是基础数据',</span></span><br><span class="line"><span class="string">  `f_type` int(1) NOT NULL COMMENT '数据类型，0基础数据, 1业务数据, 冗余字段，便于检索',</span></span><br><span class="line"><span class="string">  `f_data_num` int(11) NOT NULL DEFAULT '0' COMMENT '数据总量',</span></span><br><span class="line"><span class="string">  `f_relation_id` varchar(32) NOT NULL DEFAULT '' COMMENT '业务生成的unique id，标识基础表和星形表的关联, 例如医院基础数据和医院挂号业务数据两个数据源就需要共用同一个唯一id',</span></span><br><span class="line"><span class="string">  `f_status` tinyint NOT NULL COMMENT '状态 1 成功 0 失败',</span></span><br><span class="line"><span class="string">  `f_create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '数据方创建时间',</span></span><br><span class="line"><span class="string">  `f_version` int(10) NOT NULL DEFAULT 1 COMMENT '数据在当天的版本',</span></span><br><span class="line"><span class="string">  `f_deal_status` tinyint NOT NULL DEFAULT '-1' COMMENT '状态 -1 未处理 1 成功 0 失败 状态位2表示处理中..',</span></span><br><span class="line"><span class="string">  `f_deal_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '处理数据时的时间',</span></span><br><span class="line"><span class="string">  PRIMARY KEY (`f_id`)</span></span><br><span class="line"><span class="string">) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    cursor.execute(sql_stmt6)</span><br><span class="line">    conn.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    conn.rollback()</span><br><span class="line">    <span class="keyword">print</span> e</span><br></pre></td></tr></table></figure><pre><code>(1050, &quot;Table &apos;t_data_status&apos; already exists&quot;)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/hqdefault.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;快速指引&quot;&gt;&lt;a href=&quot;#快速指引&quot; cl
      
    
    </summary>
    
      <category term="Python" scheme="https://liketea.xyz/categories/Python/"/>
    
    
      <category term="教程" scheme="https://liketea.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Python" scheme="https://liketea.xyz/tags/Python/"/>
    
      <category term="数据库" scheme="https://liketea.xyz/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Python操作Excel——openpyxl</title>
    <link href="https://liketea.xyz/Python/Python%E6%93%8D%E4%BD%9CExcel%E2%80%94%E2%80%94openpyxl/"/>
    <id>https://liketea.xyz/Python/Python操作Excel——openpyxl/</id>
    <published>2019-05-03T12:24:14.000Z</published>
    <updated>2019-05-03T12:43:34.817Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/0_eSQte3e-rJeH7bu8.jpg" alt></p><h2 id="快速指引"><a href="#快速指引" class="headerlink" title="快速指引"></a>快速指引</h2><p>用python读写excel的强大工具：openpyxl。本文只整理了openpyxl中那些使用最频繁的操作，其余的可自行搜索或查看<a href="https://openpyxl.readthedocs.io/en/stable/tutorial.html" target="_blank" rel="noopener">官方文档</a>，或者<a href="http://www.osgeo.cn/openpyxl/index.html#" target="_blank" rel="noopener">中文文档</a>。</p><h3 id="openpyxl安装"><a href="#openpyxl安装" class="headerlink" title="openpyxl安装"></a>openpyxl安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install openpyxl</span><br></pre></td></tr></table></figure><h3 id="openpyxl使用"><a href="#openpyxl使用" class="headerlink" title="openpyxl使用"></a>openpyxl使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> openpyxl <span class="keyword">as</span> opx</span><br><span class="line"><span class="keyword">from</span> openpyxl.utils <span class="keyword">import</span> get_column_letter</span><br></pre></td></tr></table></figure><h2 id="workbook级操作"><a href="#workbook级操作" class="headerlink" title="workbook级操作"></a>workbook级操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个workbook对象，默认只含有一个sheet</span></span><br><span class="line">wb = opx.Workbook()</span><br><span class="line"><span class="keyword">print</span> wb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载已有的Workbook文件，返回一个Workbook对象</span></span><br><span class="line">wb_exist = opx.load_workbook(<span class="string">'./learn.xlsx'</span>)</span><br><span class="line"><span class="keyword">print</span> wb_exist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭workbook，如果Workbook已打开则关闭，只会影响到read_only和write_only模式</span></span><br><span class="line">wb_exist.close()</span><br></pre></td></tr></table></figure><pre><code>&lt;openpyxl.workbook.workbook.Workbook object at 0x10966fa50&gt;&lt;openpyxl.workbook.workbook.Workbook object at 0x10968ee90&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保存Workbook</span></span><br><span class="line">wb.save(<span class="string">'./5-3.xlsx'</span>)</span><br></pre></td></tr></table></figure><h2 id="Worksheet级操作"><a href="#Worksheet级操作" class="headerlink" title="Worksheet级操作"></a>Worksheet级操作</h2><h3 id="获取Worksheet对象"><a href="#获取Worksheet对象" class="headerlink" title="获取Worksheet对象"></a>获取Worksheet对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 激活第一个worksheet</span></span><br><span class="line">ws = wb.active</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新的worksheet，如果表名已被占用则在表名后加123</span></span><br><span class="line">ws1 = wb.create_sheet(<span class="string">'Sheet1'</span>)</span><br><span class="line">ws2 = wb.create_sheet(<span class="string">'sheet2'</span>)</span><br><span class="line"><span class="keyword">print</span> ws, ws1, ws2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取Worksheet对象</span></span><br><span class="line">ws1 = wb[<span class="string">'Sheet1'</span>]</span><br><span class="line"><span class="keyword">print</span> ws1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历所有worksheets</span></span><br><span class="line"><span class="keyword">for</span> wse <span class="keyword">in</span> wb.worksheets:</span><br><span class="line">    <span class="keyword">print</span> wse.title</span><br></pre></td></tr></table></figure><pre><code>&lt;Worksheet &quot;Sheet&quot;&gt; &lt;Worksheet &quot;Sheet1&quot;&gt; &lt;Worksheet &quot;sheet2&quot;&gt;&lt;Worksheet &quot;Sheet1&quot;&gt;SheetSheet1sheet2</code></pre><h3 id="获取Worksheet对象的属性"><a href="#获取Worksheet对象的属性" class="headerlink" title="获取Worksheet对象的属性"></a>获取Worksheet对象的属性</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 返回所有worksheets的名字</span></span><br><span class="line"><span class="keyword">print</span> wb.sheetnames</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取Worksheet的名字</span></span><br><span class="line"><span class="keyword">print</span> ws.title</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取Worksheet最大行和最大列，初始时只有一行一列</span></span><br><span class="line"><span class="keyword">print</span> ws.max_column,ws.max_row</span><br></pre></td></tr></table></figure><pre><code>[u&apos;Sheet0&apos;, u&apos;Sheet1&apos;, u&apos;sheet2&apos;, u&apos;Sheet0 Copy&apos;]Sheet01 1</code></pre><h3 id="操作Worksheet"><a href="#操作Worksheet" class="headerlink" title="操作Worksheet"></a>操作Worksheet</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更改Worksheet的表名</span></span><br><span class="line">ws.title = <span class="string">'Sheet0'</span></span><br><span class="line"><span class="keyword">print</span> ws.title</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改表名背景颜色</span></span><br><span class="line">ws.sheet_properties.tabColor = <span class="string">"1072BA"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制worksheet</span></span><br><span class="line">ws_copy = wb.copy_worksheet(ws)</span><br><span class="line"><span class="keyword">print</span> ws_copy</span><br></pre></td></tr></table></figure><pre><code>Sheet0&lt;Worksheet &quot;Sheet0 Copy1&quot;&gt;</code></pre><h3 id="Worksheet行列操作"><a href="#Worksheet行列操作" class="headerlink" title="Worksheet行列操作"></a>Worksheet行列操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在Worksheet的max_row后面追加一行数据，序列默认从第一列添加，不足则补None</span></span><br><span class="line">ws.append([<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line">tuple(ws.values)</span><br></pre></td></tr></table></figure><pre><code>((1, 2),)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 也可传入字典，key对应了列</span></span><br><span class="line">ws.append(&#123;<span class="number">1</span>:<span class="number">3</span>, <span class="string">'C'</span>: <span class="number">5</span>&#125;)</span><br><span class="line">tuple(ws.values)</span><br></pre></td></tr></table></figure><pre><code>((1, 2, None), (3, None, 5))</code></pre><h3 id="Worksheet插入-删除行或列"><a href="#Worksheet插入-删除行或列" class="headerlink" title="Worksheet插入/删除行或列"></a>Worksheet插入/删除行或列</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在第3行前面插入行，如果参数超出了当前范围则什么也不做</span></span><br><span class="line">ws.insert_rows(<span class="number">1</span>)</span><br><span class="line">tuple(ws.values)</span><br></pre></td></tr></table></figure><pre><code>((None, None, None), (1, 2, None), (3, None, 5))</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ws.delete_rows(idx=<span class="number">3</span>,amount=<span class="number">1</span>)</span><br><span class="line">tuple(ws.values)</span><br></pre></td></tr></table></figure><pre><code>((None, None, None), (1, 2, None))</code></pre><h2 id="Cell级操作"><a href="#Cell级操作" class="headerlink" title="Cell级操作"></a>Cell级操作</h2><h3 id="获取Cell对象"><a href="#获取Cell对象" class="headerlink" title="获取Cell对象"></a>获取Cell对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取单个Cell</span></span><br><span class="line">cell_a1 = ws[<span class="string">'A1'</span>]</span><br><span class="line">cell_a1 = ws.cell(row=<span class="number">1</span>, column=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">print</span> cell_a1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当一个worksheet在内存中被创建时，它不包含任何Cell，只有当Cell被首次访问时才被创建</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">        ws.cell(row=r+<span class="number">1</span>, column=c+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取单行Cell、获取单列Cell，返回一个单元格对象组成的元组</span></span><br><span class="line"><span class="keyword">print</span> ws[<span class="number">1</span>], len(ws[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">print</span> ws[<span class="string">'A'</span>], len(ws[<span class="string">'A'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取多行多列</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'前三列'</span>, ws[<span class="string">'A'</span>:<span class="string">'C'</span>]</span><br><span class="line"><span class="keyword">print</span> <span class="string">'前两行：'</span>, ws[<span class="number">1</span>:<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取一个区域</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'A1:C2：'</span>,ws[<span class="string">'A1'</span>:<span class="string">'C2'</span>]</span><br></pre></td></tr></table></figure><pre><code>&lt;Cell u&apos;Sheet0&apos;.A1&gt;(&lt;Cell u&apos;Sheet0&apos;.A1&gt;, &lt;Cell u&apos;Sheet0&apos;.B1&gt;, &lt;Cell u&apos;Sheet0&apos;.C1&gt;) 3(&lt;Cell u&apos;Sheet0&apos;.A1&gt;, &lt;Cell u&apos;Sheet0&apos;.A2&gt;, &lt;Cell u&apos;Sheet0&apos;.A3&gt;) 3前三列 ((&lt;Cell u&apos;Sheet0&apos;.A1&gt;, &lt;Cell u&apos;Sheet0&apos;.A2&gt;, &lt;Cell u&apos;Sheet0&apos;.A3&gt;), (&lt;Cell u&apos;Sheet0&apos;.B1&gt;, &lt;Cell u&apos;Sheet0&apos;.B2&gt;, &lt;Cell u&apos;Sheet0&apos;.B3&gt;), (&lt;Cell u&apos;Sheet0&apos;.C1&gt;, &lt;Cell u&apos;Sheet0&apos;.C2&gt;, &lt;Cell u&apos;Sheet0&apos;.C3&gt;))前两行： ((&lt;Cell u&apos;Sheet0&apos;.A1&gt;, &lt;Cell u&apos;Sheet0&apos;.B1&gt;, &lt;Cell u&apos;Sheet0&apos;.C1&gt;), (&lt;Cell u&apos;Sheet0&apos;.A2&gt;, &lt;Cell u&apos;Sheet0&apos;.B2&gt;, &lt;Cell u&apos;Sheet0&apos;.C2&gt;))A1:C2： ((&lt;Cell u&apos;Sheet0&apos;.A1&gt;, &lt;Cell u&apos;Sheet0&apos;.B1&gt;, &lt;Cell u&apos;Sheet0&apos;.C1&gt;), (&lt;Cell u&apos;Sheet0&apos;.A2&gt;, &lt;Cell u&apos;Sheet0&apos;.B2&gt;, &lt;Cell u&apos;Sheet0&apos;.C2&gt;))</code></pre><h3 id="遍历行-列-单元格对象"><a href="#遍历行-列-单元格对象" class="headerlink" title="遍历行/列/单元格对象"></a>遍历行/列/单元格对象</h3><p>遍历用 <code>ws.iter_rows</code> 和 <code>ws.iter_cols</code> 就够了！！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按行列号遍历每一行，带min max参数时不受已激活范围的影响</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">1</span>,max_row=<span class="number">2</span>,min_col=<span class="number">1</span>,max_col=<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">print</span> row</span><br></pre></td></tr></table></figure><pre><code>(&lt;Cell u&apos;Sheet0&apos;.A1&gt;, &lt;Cell u&apos;Sheet0&apos;.B1&gt;, &lt;Cell u&apos;Sheet0&apos;.C1&gt;)(&lt;Cell u&apos;Sheet0&apos;.A2&gt;, &lt;Cell u&apos;Sheet0&apos;.B2&gt;, &lt;Cell u&apos;Sheet0&apos;.C2&gt;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历每一列，不带min max参数时，只返回激活范围内的单元格</span></span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> ws.iter_cols():</span><br><span class="line">    <span class="keyword">print</span> col</span><br></pre></td></tr></table></figure><pre><code>(&lt;Cell u&apos;Sheet0&apos;.A1&gt;, &lt;Cell u&apos;Sheet0&apos;.A2&gt;, &lt;Cell u&apos;Sheet0&apos;.A3&gt;)(&lt;Cell u&apos;Sheet0&apos;.B1&gt;, &lt;Cell u&apos;Sheet0&apos;.B2&gt;, &lt;Cell u&apos;Sheet0&apos;.B3&gt;)(&lt;Cell u&apos;Sheet0&apos;.C1&gt;, &lt;Cell u&apos;Sheet0&apos;.C2&gt;, &lt;Cell u&apos;Sheet0&apos;.C3&gt;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 行优先遍历每个单元格，ws.iter_rows()和ws.rows效果相同，但前者可自定义参数</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows():</span><br><span class="line">    <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">        <span class="keyword">print</span> cell</span><br></pre></td></tr></table></figure><pre><code>&lt;Cell u&apos;Sheet0&apos;.A1&gt;&lt;Cell u&apos;Sheet0&apos;.B1&gt;&lt;Cell u&apos;Sheet0&apos;.C1&gt;&lt;Cell u&apos;Sheet0&apos;.A2&gt;&lt;Cell u&apos;Sheet0&apos;.B2&gt;&lt;Cell u&apos;Sheet0&apos;.C2&gt;&lt;Cell u&apos;Sheet0&apos;.A3&gt;&lt;Cell u&apos;Sheet0&apos;.B3&gt;&lt;Cell u&apos;Sheet0&apos;.C3&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历区域</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> ws[<span class="string">'a1:c2'</span>]:</span><br><span class="line">    <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">        <span class="keyword">print</span> cell</span><br></pre></td></tr></table></figure><pre><code>&lt;Cell u&apos;Sheet0&apos;.A1&gt;&lt;Cell u&apos;Sheet0&apos;.B1&gt;&lt;Cell u&apos;Sheet0&apos;.C1&gt;&lt;Cell u&apos;Sheet0&apos;.A2&gt;&lt;Cell u&apos;Sheet0&apos;.B2&gt;&lt;Cell u&apos;Sheet0&apos;.C2&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历值</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">1</span>,max_col=<span class="number">2</span>,values_only=<span class="literal">True</span>):</span><br><span class="line">    <span class="keyword">print</span> row</span><br></pre></td></tr></table></figure><pre><code>(None, None)(1, 2)(None, None)</code></pre><h3 id="获取单元格的属性"><a href="#获取单元格的属性" class="headerlink" title="获取单元格的属性"></a>获取单元格的属性</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cell = ws[<span class="string">'A1'</span>]</span><br><span class="line"><span class="keyword">print</span> cell.value</span><br></pre></td></tr></table></figure><pre><code>None</code></pre><h3 id="修改Cell的属性"><a href="#修改Cell的属性" class="headerlink" title="修改Cell的属性"></a>修改Cell的属性</h3><h4 id="修改单元格的值"><a href="#修改单元格的值" class="headerlink" title="修改单元格的值"></a>修改单元格的值</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改单元格的值</span></span><br><span class="line">ws[<span class="string">'A1'</span>] = <span class="number">0</span></span><br><span class="line"><span class="keyword">print</span> ws[<span class="string">'A1'</span>].value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改一个区域的值，需要逐个赋值</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> ws[<span class="string">'a1'</span>:<span class="string">'c3'</span>]:</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> r:</span><br><span class="line">        c.value = <span class="number">3</span></span><br><span class="line"><span class="keyword">print</span> tuple(ws.values)</span><br></pre></td></tr></table></figure><pre><code>0((3, 3, 3), (3, 3, 3), (3, 3, 3))</code></pre><h4 id="修改单元格的格式"><a href="#修改单元格的格式" class="headerlink" title="修改单元格的格式"></a>修改单元格的格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">单元格的默认属性:</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; font = Font(name=&apos;Calibri&apos;,</span><br><span class="line">...                 size=11,</span><br><span class="line">...                 bold=False,</span><br><span class="line">...                 italic=False,</span><br><span class="line">...                 vertAlign=None,</span><br><span class="line">...                 underline=&apos;none&apos;,</span><br><span class="line">...                 strike=False,</span><br><span class="line">...                 color=&apos;FF000000&apos;)</span><br><span class="line">&gt;&gt;&gt; fill = PatternFill(fill_type=None,</span><br><span class="line">...                 start_color=&apos;FFFFFFFF&apos;,</span><br><span class="line">...                 end_color=&apos;FF000000&apos;)</span><br><span class="line">&gt;&gt;&gt; border = Border(left=Side(border_style=None,</span><br><span class="line">...                           color=&apos;FF000000&apos;),</span><br><span class="line">...                 right=Side(border_style=None,</span><br><span class="line">...                            color=&apos;FF000000&apos;),</span><br><span class="line">...                 top=Side(border_style=None,</span><br><span class="line">...                          color=&apos;FF000000&apos;),</span><br><span class="line">...                 bottom=Side(border_style=None,</span><br><span class="line">...                             color=&apos;FF000000&apos;),</span><br><span class="line">...                 diagonal=Side(border_style=None,</span><br><span class="line">...                               color=&apos;FF000000&apos;),</span><br><span class="line">...                 diagonal_direction=0,</span><br><span class="line">...                 outline=Side(border_style=None,</span><br><span class="line">...                              color=&apos;FF000000&apos;),</span><br><span class="line">...                 vertical=Side(border_style=None,</span><br><span class="line">...                               color=&apos;FF000000&apos;),</span><br><span class="line">...                 horizontal=Side(border_style=None,</span><br><span class="line">...                                color=&apos;FF000000&apos;)</span><br><span class="line">...                )</span><br><span class="line">&gt;&gt;&gt; alignment=Alignment(horizontal=&apos;general&apos;,</span><br><span class="line">...                     vertical=&apos;bottom&apos;,</span><br><span class="line">...                     text_rotation=0,</span><br><span class="line">...                     wrap_text=False,</span><br><span class="line">...                     shrink_to_fit=False,</span><br><span class="line">...                     indent=0)</span><br><span class="line">&gt;&gt;&gt; number_format = &apos;General&apos;</span><br><span class="line">&gt;&gt;&gt; protection = Protection(locked=True,</span><br><span class="line">...                         hidden=False)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> openpyxl.styles <span class="keyword">import</span> PatternFill, Border, Side, Alignment, Protection, Font</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以修改单元格的字体为例</span></span><br><span class="line">font = Font(name=<span class="string">'Calibri'</span>,</span><br><span class="line">                 size=<span class="number">16</span>,</span><br><span class="line">                 bold=<span class="literal">False</span>,</span><br><span class="line">                 italic=<span class="literal">False</span>,</span><br><span class="line">                 vertAlign=<span class="literal">None</span>,</span><br><span class="line">                 underline=<span class="string">'none'</span>,</span><br><span class="line">                 strike=<span class="literal">False</span>,</span><br><span class="line">                 color=<span class="string">'FF000000'</span>)</span><br><span class="line">alignment=Alignment(horizontal=<span class="string">'left'</span>,</span><br><span class="line">                     vertical=<span class="string">'center'</span>,</span><br><span class="line">                     text_rotation=<span class="number">0</span>,</span><br><span class="line">                     wrap_text=<span class="literal">False</span>,</span><br><span class="line">                     shrink_to_fit=<span class="literal">False</span>,</span><br><span class="line">                     indent=<span class="number">0</span>)</span><br><span class="line">ws[<span class="string">'a1'</span>] = <span class="number">9999</span></span><br><span class="line">ws[<span class="string">'a1'</span>].font = font</span><br><span class="line">ws[<span class="string">'a1'</span>].alignment = alignment</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wb.save(<span class="string">'./learn_openpyxl.xlsx'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/dadd.png" alt></p><h2 id="改进模式"><a href="#改进模式" class="headerlink" title="改进模式"></a>改进模式</h2><p>有时，您需要打开或写入非常大的XLSX文件，而OpenPYXL中的常见例程将无法处理该负载。幸运的是，有两种模式使您能够以（接近）恒定的内存消耗来读写无限量的数据。</p><h3 id="只读模式"><a href="#只读模式" class="headerlink" title="只读模式"></a>只读模式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wb_read = opx.load_workbook(filename=<span class="string">'./learn_openpyxl.xlsx'</span>, read_only=<span class="literal">True</span>)</span><br><span class="line">wb_read</span><br></pre></td></tr></table></figure><pre><code>&lt;openpyxl.workbook.workbook.Workbook at 0x1096f4110&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ws_read = wb_read.active</span><br><span class="line"><span class="keyword">print</span> ws_read.max_row,ws_read.max_column</span><br></pre></td></tr></table></figure><pre><code>3 3</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> ws_read.iter_rows(values_only=<span class="literal">True</span>):</span><br><span class="line">    <span class="keyword">print</span> row</span><br></pre></td></tr></table></figure><pre><code>(9999L, 3L, 3L)(3L, 3L, 3L)(3L, 3L, 3L)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wb_read.close()</span><br><span class="line">wb_read</span><br></pre></td></tr></table></figure><pre><code>&lt;openpyxl.workbook.workbook.Workbook at 0x1096f4110&gt;</code></pre><h3 id="只写模式"><a href="#只写模式" class="headerlink" title="只写模式"></a>只写模式</h3><ul><li>与普通工作簿不同，新创建的只写工作簿不包含任何工作表；必须使用 create_sheet() 方法。</li><li>在只写工作簿中，只能使用 append() . 不能在任意位置用 cell() 或 iter_rows() .</li><li>它能够导出无限量的数据（甚至超过了Excel的实际处理能力），同时将内存使用量保持在10MB以下。</li><li>只写工作簿只能保存一次。之后，每次试图将工作簿或append（）保存到现有工作表时，都会引发 openpyxl.utils.exceptions.WorkbookAlreadySaved 例外。</li><li>在添加单元格之前，必须创建实际单元格数据之前出现在文件中的所有内容，因为在此之前必须将其写入文件。例如， freeze_panes 应在添加单元格之前设置。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># load_workbook本地读取的Excel没有只写权限</span></span><br><span class="line">wb_write = opx.Workbook(write_only=<span class="literal">True</span>)</span><br><span class="line">wb_write</span><br></pre></td></tr></table></figure><pre><code>&lt;openpyxl.workbook.workbook.Workbook at 0x1096cba10&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只写模式的Workbook创建后，没有sheet，需要手动创建</span></span><br><span class="line"><span class="keyword">print</span> wb_write.worksheets</span><br><span class="line">ws_write = wb_write.create_sheet()</span><br><span class="line"><span class="keyword">print</span> ws_write</span><br></pre></td></tr></table></figure><pre><code>[]&lt;WriteOnlyWorksheet &quot;Sheet&quot;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只写模式的worksheet没有cell属性，也不能通过索引来获取单元格</span></span><br><span class="line">ws_write.cell</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------AttributeError                            Traceback (most recent call last)&lt;ipython-input-39-5164431d4a6c&gt; in &lt;module&gt;()      1 # 只写模式的worksheet没有cell属性，也不能通过索引来获取单元格----&gt; 2 ws_write.cellAttributeError: &apos;WriteOnlyWorksheet&apos; object has no attribute &apos;cell&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ws_write.append([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果希望为单元格添加格式或注释，可以使用WriteOnlyCell</span></span><br><span class="line"><span class="keyword">from</span> openpyxl.cell <span class="keyword">import</span> WriteOnlyCell</span><br><span class="line"><span class="keyword">from</span> openpyxl.comments <span class="keyword">import</span> Comment</span><br><span class="line"><span class="keyword">from</span> openpyxl.styles <span class="keyword">import</span> Font</span><br><span class="line"></span><br><span class="line">cell = WriteOnlyCell(ws, value=<span class="string">"hello world"</span>)</span><br><span class="line">cell.font = Font(name=<span class="string">'Courier'</span>, size=<span class="number">36</span>)</span><br><span class="line">cell.comment = Comment(text=<span class="string">"A comment"</span>, author=<span class="string">"Author's Name"</span>)</span><br><span class="line">ws.append([cell, <span class="number">3.14</span>, <span class="literal">None</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wb_write.save(<span class="string">'./write_only.xlsx'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/0_eSQte3e-rJeH7bu8.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;快速指引&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="Python" scheme="https://liketea.xyz/categories/Python/"/>
    
    
      <category term="教程" scheme="https://liketea.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Python" scheme="https://liketea.xyz/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>《大秦帝国之裂变》语录</title>
    <link href="https://liketea.xyz/uncategorized/%E5%A4%A7%E7%A7%A6%E5%B8%9D%E5%9B%BD%E4%B9%8B%E8%A3%82%E5%8F%98/"/>
    <id>https://liketea.xyz/uncategorized/大秦帝国之裂变/</id>
    <published>2019-04-05T05:00:21.000Z</published>
    <updated>2019-04-05T14:54:08.263Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190405130157.png" alt></p><h2 id="第一集：少梁之战"><a href="#第一集：少梁之战" class="headerlink" title="第一集：少梁之战"></a>第一集：少梁之战</h2><p>秦兵：赳赳老秦，复我河山。血不流干，死不休战。</p><h2 id="第二集：秦军撤兵"><a href="#第二集：秦军撤兵" class="headerlink" title="第二集：秦军撤兵"></a>第二集：秦军撤兵</h2><p>少梁之战，秦献公身中狼毒箭，魏国丞相公孙痤被俘，秦军撤兵。</p><h2 id="第三集：献公传位"><a href="#第三集：献公传位" class="headerlink" title="第三集：献公传位"></a>第三集：献公传位</h2><h3 id="献公召见公子虔"><a href="#献公召见公子虔" class="headerlink" title="献公召见公子虔"></a>献公召见公子虔</h3><ul><li>献公：跟公父说实话，你想不想做国君？</li><li>公子虔：公父让我做，我便做，公父不让我做，我便不做。</li><li>献公：好，为父没有看错你，铮铮铁骨，定国柱石。</li><li>公子虔：公父说过，秦国疲弱，祸在内斗，惟有一心，方能强国。</li><li>献公：老大啊，你说实话，为父有没有把你和渠梁分过嫡庶？</li><li>公子虔：公父何出此言啊，儿臣周岁丧母，国后娘抱儿养儿，历尽了艰辛万苦，爱儿如同亲生，养儿胜于亲娘，此恩是天高地厚，儿臣纵是禽兽也九死不能报万一，儿臣又怎会生出嫡庶异心之分。</li><li>献公：你娘是你娘啊。。。</li><li>公子虔：公父待儿，倚重之心天地可鉴，庶出疏离之感，儿臣从未有过。</li><li>献公：好，好，老大，为父那就放开说话了。老大，你说，假如你是农夫，是工匠，或者是个军士，你看谁做国君更好？</li><li>公子虔：渠梁更合适。儿臣绝无虚言。</li><li>献公：老大，为父还是要你立誓明心啊。</li><li>公子虔：公父是信不过儿臣吗？</li><li>献公：不，老大，不是不信任你，实在是国家公器不能寄予一言，即使是骨肉兄弟，也得是公心为先</li><li>公子虔：（自断手指中。。。）</li><li>献公：老大，老大，我看看，哎呀。。。你呀。。。</li></ul><h3 id="献公召见渠梁"><a href="#献公召见渠梁" class="headerlink" title="献公召见渠梁"></a>献公召见渠梁</h3><ul><li>献公：渠梁啊，公父有话跟你说，不要分心，公父的路要走完了，我决定立你为太子，即刻继国君之位。</li><li>渠梁：公父，这。。。</li><li>献公：听我说完！这是老大的血誓，他若有二心，你就可以公诸朝野，人人得以诛之。</li><li>渠梁：公父，我与大哥素来同心同德，为何让大哥如此折磨自己？</li><li>献公：渠梁啊，千万要记住，同德易，同心难，大德大节，求同就更难，历来公室内乱，哪个不是骨肉相残？赢虔，他是内明之人，你要倚重他，血誓，只防万一。</li><li>渠梁：公父放心，公父教诲渠梁铭记在心，如果食言，死不得入赢氏太庙。</li></ul><h2 id="第四集：秦国释放公孙痤"><a href="#第四集：秦国释放公孙痤" class="headerlink" title="第四集：秦国释放公孙痤"></a>第四集：秦国释放公孙痤</h2><h3 id="渠梁阻止荧玉杀公孙痤"><a href="#渠梁阻止荧玉杀公孙痤" class="headerlink" title="渠梁阻止荧玉杀公孙痤"></a>渠梁阻止荧玉杀公孙痤</h3><ul><li>渠梁：小妹，你可以不认我这个哥哥，但你不能不认我这个国君。</li><li>荧玉：你为何不让我杀公叔老贼？</li><li>渠梁：私仇滥杀，乱国乱局。</li><li>荧玉：君仇国恨自古一体，何谓私仇？</li><li>渠梁：无视国家存亡，惟泄一己怨恨，就是私仇。</li><li>荧玉：得先君之位忘先君之仇，这才是天地难容！</li><li>渠梁：公器不存私念，公父若在，也会如此。左庶长，公叔痤不能杀。</li><li>嬴虔：左庶长？我是你大哥！</li><li>渠梁：事涉国家，没有大哥，只有君臣。</li><li>嬴虔：老秦人同仇敌忾，我看哪个国君敢护仇？</li><li>渠梁：父仇为私，不能公报！娘，大哥，小妹，大臣将士们，渠梁少入军旅，和父老兄弟并肩血战沙场，脚下踩过万千老秦人的尸骨，哪个不是做梦都想着复仇啊，杀一个俘虏，就能证明我们老秦人的血性吗？今日杀了公孙痤，只能解一时之恨，然而必然引起山东六国集体攻秦，到时候邦国灭亡，尸骨成山，谁来复仇啊，复个鸟！说到底，只有保住国家，保住百姓，保住将士，秦国才能复仇，才能翻身，才能雪耻！</li></ul><h3 id="卫鞅救师求见公子虔"><a href="#卫鞅救师求见公子虔" class="headerlink" title="卫鞅救师求见公子虔"></a>卫鞅救师求见公子虔</h3><p>公子虔：什么事那么重要，别绕弯子，说吧。<br>卫鞅：原本申明非秦公不言，念公子虔是秦国栋梁，新君兄长，说也无妨。<br>公子虔：直说，实说。<br>卫鞅：在下入秦，一非官派，二非私托，只为一事，救回老丞相以全师生之交。<br>公子虔：就凭你啊。<br>卫鞅：卫鞅救师，也救秦国。<br>公子虔：哈哈哈。。。魏人救秦？笑话。<br>卫鞅：上将军未免浅见，在下明言，魏国朝野，庞涓力主灭秦，而丞相公叔图谋称霸，二人势同水火。庞涓奇袭骊山，就是要夺回公叔明正典刑，一举剪除政敌，从而全力灭秦，今奇袭未成，庞涓自然退而求其次，希望借秦人之手杀死我师，若秦国当真如此，无异于助了庞涓一臂之力，加重了自己的危机处境。眼下，唯有一策，即可救我师，又可救秦国。<br>公子虔：说下去。<br>卫鞅：这一策便是，秦国放人、割地、求和。使魏国一时无攻秦口实，日后再做图谋，如此，两全，否则秦国危在旦夕。<br>公子虔：卖国求私，还大言侃侃，天下一奇啊。<br>卫鞅：在下并非魏人，更非魏臣，何谈卖国。<br>公子虔：带入大营。。。</p><h3 id="渠梁谈和公孙痤"><a href="#渠梁谈和公孙痤" class="headerlink" title="渠梁谈和公孙痤"></a>渠梁谈和公孙痤</h3><p>公孙痤：你说，老秦公死了？既然如此，老夫的人头归你了，何时开刀？<br>渠梁：老丞相差矣，渠梁不是要杀你，而是来放你。<br>公孙痤：哈哈哈。。。小子，你敢嘲弄老夫，士可杀，不可辱<br>渠梁：渠梁怎敢侮辱前辈，我诚意放老丞相回归安邑，想当时秦魏两国激战多年，生灵涂炭，死伤无数，渠梁新任国君，只图秦国庶民安居耕牧，并不想两国纠缠交恶，素知老丞相深明大义，嬴渠梁欲与老丞相共谋两国休战歇兵，并无它意。<br>公孙痤：秦公不记杀父之仇？<br>渠梁：父仇为私，和战为公。嬴渠梁若非真心，愿受上天惩罚。<br>公孙痤：好，老夫信你。只是这疆界，不知秦公如何打算？<br>渠梁：以石门大战之前为定。<br>公孙痤：河西高原，秦东地带，函谷关都给魏国？<br>渠梁：嗯。<br>公孙痤：两国邦交作何说法？<br>渠梁：秦国承认魏国霸主地位。<br>公孙痤：纳贡，称臣？<br>渠梁：不称臣，不纳贡。<br>公孙痤：再让一步，会更稳妥一些。<br>渠梁：老丞相，凡事都有底线，秦国穷困，无贡可纳，秦人硬骨，不能折腰。<br>公孙痤：秦公大明！<br>渠梁：二十年后我会夺回来的。<br>公孙痤：共有此心，老夫拭目以待，只是这缓兵之计太过明显<br>渠梁：老丞相，秦国虽穷，却是尚武善战之邦，若魏国执意灭秦，老秦人必将拼死血战，魏国纵然灭秦，也将在惨胜之后元气大伤，那时，魏国必成众矢之的，非但保不住霸主地位，反而被五大强国瓜分，如果魏王不明此理，秦国宁肯血战到底。休息三五日之后，渠梁派出特使护送老丞相返回安邑，不言俘获，只当做魏王议和特使对待，行吗？<br>公孙痤：哎，老夫阅人无数，秦公气量胸怀，数年之后必令天下刮目相看。<br>渠梁：渠梁浅陋，哪敢当此褒奖。<br>公孙痤：可惜老夫来日不多，不能与你并世争雄了。</p><h2 id="第五集：说服魏王谈和"><a href="#第五集：说服魏王谈和" class="headerlink" title="第五集：说服魏王谈和"></a>第五集：说服魏王谈和</h2><h3 id="卫鞅支持公孙痤争霸方略"><a href="#卫鞅支持公孙痤争霸方略" class="headerlink" title="卫鞅支持公孙痤争霸方略"></a>卫鞅支持公孙痤争霸方略</h3><p>公孙痤：卫鞅，你到酒肆去了？<br>卫鞅：老师，族人有望解禁。<br>公孙痤：酒肆消息你也信？荒唐<br>卫鞅：哈哈。。。断事不在消息源头，在自家评判。<br>公孙痤：算了，不说在这些了，鞅啊，总算是有惊无险。<br>卫鞅：不，险关还未过，庞涓以一统天下为终身大志，铁了心要拿秦国开刀，魏王未必不为所动。<br>公孙痤：庞涓、公子卬都想杀老夫。<br>卫鞅：公子卬不足为虑，争功夺权罢了，庞涓才是真正的大患。<br>公孙痤：这一统天下也是大魏功业所在，老夫若是为了保住性命而反对，公心何在？<br>卫鞅：老师差矣，一统天下如果可行，卫鞅也不会帮老师与庞涓对峙。<br>公孙痤：你说一统天下不可行？<br>卫鞅：时势未到，眼下不可行。<br>公孙痤：为何?<br>卫鞅：天下无一心，七国无独强，未来之势未见分晓，冒然灭国定会招致灾祸。<br>公孙痤：你是说，还是老夫的争霸方略，适合魏国？<br>卫鞅：正是。<br>卫鞅：备车！</p><h3 id="公孙痤说服魏王谈和"><a href="#公孙痤说服魏王谈和" class="headerlink" title="公孙痤说服魏王谈和"></a>公孙痤说服魏王谈和</h3><p>魏王：那老丞相你说，让本人怎么接受秦国那几块鸡零狗碎？<br>公孙痤：如何对秦，首在长策！<br>魏王：先说办法，再讲长策！<br>公孙痤：老臣的办法分两步走。<br>魏王：第一步。<br>公孙痤：与秦罢兵，接纳割地，河西秦东数十县，再加上函谷关天险，绝非鸡零狗碎。<br>魏王：第二步。<br>公孙痤：待秦地完全划入魏国，等到时机成熟再变灭秦为分秦。<br>魏王：灭秦分秦有何区别？<br>公孙痤：灭秦，魏国独吞；分秦，六国分吞。<br>魏王：那如此一来，我既无后顾之忧，又可稳坐天下霸主了。<br>公孙痤：正是<br>魏王：果然姜是老的辣！</p><h3 id="魏王庞涓密谋分秦策略"><a href="#魏王庞涓密谋分秦策略" class="headerlink" title="魏王庞涓密谋分秦策略"></a>魏王庞涓密谋分秦策略</h3><p>魏王：本王在庙堂上的运筹，上将军明白吗？<br>庞涓：我王一番指点，臣恍然醒悟<br>魏王：这就对了，你今天想谋兵灭秦固然是上策，但是现在到达嘴边的这块肥肉不能让它滑了，一纸休兵盟书，不费一兵一卒，我大魏便可稳稳占了秦国东部最肥美的土地城池，到哪去找这等好事去？实咬一口当然胜过虚啃三日，治国之道尽在此矣！<br>庞涓：不过，我王，臣以为，先食言于秦国，再食言于五国，只怕有失道义。<br>魏王：道义？现在天下大争，谁讲道义，讲道义干什么？我今天就是要咬秦国这块肥肉，然后啃秦国这块骨头，谁敢奈我何？不服，不服就等你先强大了再说；你弱，你就没有说话的资格，就只能等着做别人砧板上的鱼肉，明白吗？什么叫邦交？下刀之前的动作才叫邦交。<br>庞涓：臣以为，还是打出来的地盘更实在。<br>魏王：打归打，谈归谈嘛，两手并用才能得天下，明白吗？六国分秦，即刻交你放手去做，彻底灭秦之日就是你上将军首功之时。<br>庞涓：臣遵命。</p><h3 id="卫鞅推测老师无恙"><a href="#卫鞅推测老师无恙" class="headerlink" title="卫鞅推测老师无恙"></a>卫鞅推测老师无恙</h3><p>公叔痤：庞涓、公子卬都想杀了老夫取而代之，魏王耳根子又软。<br>卫鞅：魏王醉心权谋，喜好均衡朝局，鞅以为，老师无恙。魏王派庞涓为全权特使，正密谋六国分秦。<br>公叔痤：魏王，你的心也太急了，盟约刚立，就谋分秦，你让老夫有何颜立足于天下，让大魏又有何面目立于天下?<br>卫鞅：更重要的，魏国死盯弱小秦国，丧失了中原扩张的最佳时机。</p><h2 id="第六集：六国指地分秦"><a href="#第六集：六国指地分秦" class="headerlink" title="第六集：六国指地分秦"></a>第六集：六国指地分秦</h2><p>楚王：这商於、武关归我大楚了。<br>韩王：那崤函、关中一带就归我大韩。<br>赵王：陇西、北地全部归赵了。<br>燕王：河西、河套归我大燕。<br>齐王：齐秦相隔太远，本王不争秦地，然则我灭他国，列国不得插手。<br>庞涓：哼，如此分秦，盟主国是一无所得了?<br>众王：魏国已吞肥肉，再分居心何在？天下三王，不能只听魏王的。<br>庞涓：五君之意，是不认我魏国盟主了？<br>众王：庞涓，魏王国书原说，公平分秦，今日公平何在？<br>庞涓：公平？以本上将军谋划，根本不需要六国分秦。</p><h2 id="第七集："><a href="#第七集：" class="headerlink" title="第七集："></a>第七集：</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190405130157.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;第一集：少梁之战&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="笔记" scheme="https://liketea.xyz/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="大秦帝国" scheme="https://liketea.xyz/tags/%E5%A4%A7%E7%A7%A6%E5%B8%9D%E5%9B%BD/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Github Pages 博客搭建教程（五）：问题解答</title>
    <link href="https://liketea.xyz/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/Hexo-Github-Pages-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E9%97%AE%E9%A2%98%E8%A7%A3%E7%AD%94/"/>
    <id>https://liketea.xyz/搭建博客/Hexo-Github-Pages-博客搭建教程（五）：问题解答/</id>
    <published>2019-03-19T09:01:09.000Z</published>
    <updated>2019-03-20T13:02:14.480Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/f32be74b5abb4a05b57a37a2141e80a4.jpeg" alt></p><h2 id="百度和Google收录"><a href="#百度和Google收录" class="headerlink" title="百度和Google收录"></a>百度和Google收录</h2><p>使用 <code>GitHub + Hexo</code> 搭建的博客，默认只能你自己能看到，别人是无法通过百度、谷歌等搜索引擎搜索到的:</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1553065501429.jpg" alt></p><p>可以手动将自己的博客站点提交给百度、谷歌的搜索引擎，这样就可以通过百度或谷歌搜索到自己的博客内容了：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1553086521591.jpg" alt></p><h3 id="百度收录"><a href="#百度收录" class="headerlink" title="百度收录"></a>百度收录</h3><h4 id="验证站点"><a href="#验证站点" class="headerlink" title="验证站点"></a>验证站点</h4><p>登录<a href="https://ziyuan.baidu.com" target="_blank" rel="noopener">百度搜索资源平台</a>&gt;用户中心&gt;站点管理&gt;添加网站，输入网站域名，选择站点属性，到第三步“验证网站”：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1553082150167.jpg" alt></p><p>有三种不同的验证方式：文件验证、HTML标签验证、CNAME验证。这里我们选择文件验证，下载验证文件到本地，放置在 <code>themes/next/source</code>目录下，执行生成和部署命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>然后点击完成验证即可：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1553065459196.jpg" alt></p><h4 id="添加站点地图"><a href="#添加站点地图" class="headerlink" title="添加站点地图"></a>添加站点地图</h4><p>站点地图（sitemap）可以告诉搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。</p><ul><li>安装百度和谷歌站点地图生成插件：cd 到你的站点目录，执行以下命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">$ npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><ul><li>修改 url：修改站点配置文件 <code>_config.yml</code> 中的 <code>url</code> 参数:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url: http://jonzzs.cn # 修改成你博客的首页地址</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><ul><li>修改配置文件：修改站点配置文件 <code>_config.yml</code>，添加以下内容：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 自动生成sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br></pre></td></tr></table></figure><ul><li>生成和部署：执行生成和部署命令后，进入public目录，你会发现里面有 <code>sitemap.xml</code> 和<code>baidusitemap.xml</code> 两个文件，这就是生成的站点地图，前者用来提交给谷歌，后者用来提交给百度</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><ul><li>自动推送站点地图：在百度资源搜索平台，找到链接提交，这里我们可以看到有两种提交方式，自动提交和手动提交，自动提交又分为主动推送、自动推送和sitemap，自动推送配置最简单，将主题配置文件下的 <code>baidu_push</code> 设置为 <code>true</code>：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span><br><span class="line">baidu_push: true</span><br></pre></td></tr></table></figure><p>百度收录网站到此配置结束，只需要等待百度收录，这个过程会比较久。</p><h3 id="谷歌收录"><a href="#谷歌收录" class="headerlink" title="谷歌收录"></a>谷歌收录</h3><h4 id="验证站点-1"><a href="#验证站点-1" class="headerlink" title="验证站点"></a>验证站点</h4><p>登陆<a href="https://www.google.com/webmasters/#?modal_active=none" target="_blank" rel="noopener">Google网站站长</a> &gt; 进入Search Console &gt; 添加资源：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1553085549734.jpg" alt></p><p>我们选择 HTML 文件上传的方式验证，下载验证文件到本地，放置在 <code>themes/next/source</code>目录下，执行生成和部署命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>部署完成之后，进行验证即可：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1553084916927.jpg" alt></p><h4 id="添加站点地图-1"><a href="#添加站点地图-1" class="headerlink" title="添加站点地图"></a>添加站点地图</h4><p>安装插件、修改配置文件在上述百度收录过程已经做过了，现在只需要点击前往站点资源页面 &gt; 点击站点地图，添加新的站点地图 <code>sitemap.xml</code>：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1553085912959.jpg" alt></p><p>即可完成谷歌收录网站，只需要等待谷歌收录，这个过程会比较久。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://www.jianshu.com/p/f8ec422ebd52" target="_blank" rel="noopener">Hexo博客提交百度和Google收录</a></li><li><a href="https://ziyuan.baidu.com" target="_blank" rel="noopener">百度资源平台</a></li><li><a href="https://www.google.com/webmasters/#?modal_active=none" target="_blank" rel="noopener">Google网站站长</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/f32be74b5abb4a05b57a37a2141e80a4.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;
      
    
    </summary>
    
      <category term="搭建博客" scheme="https://liketea.xyz/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="搭建博客" scheme="https://liketea.xyz/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="教程" scheme="https://liketea.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Github Pages 博客搭建教程（四）：域名绑定</title>
    <link href="https://liketea.xyz/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/Hexo%20+%20Github%20Pages%20%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A/"/>
    <id>https://liketea.xyz/搭建博客/Hexo + Github Pages 博客搭建教程（四）：域名绑定/</id>
    <published>2019-03-14T13:10:05.000Z</published>
    <updated>2019-03-19T08:56:06.837Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314214524.png" alt></p><h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p><code>Github Pages</code> 的默认域名是 <code>&lt;your_name&gt;.github.io</code>， 如果想将默认域名修改为个人域名，首先你要拥有一个自己的域名，如果还没有，可在以下几个网站购买：</p><ul><li><a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">阿里云域名注册</a></li><li><a href="https://buy.cloud.tencent.com/domain" target="_blank" rel="noopener">腾讯云域名注册</a></li><li><a href="https://sg.godaddy.com/zh/" target="_blank" rel="noopener">GoDaddy</a></li></ul><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>如果你已经购买了域名，绑定已有域名需要分别在“域名解析服务商”和 “Github” 两边进行设置。</p><h3 id="域名解析配置"><a href="#域名解析配置" class="headerlink" title="域名解析配置"></a>域名解析配置</h3><p>将域名和其他域名进行绑定，让你可以通过不同域名访问同一个网站。因为我是在腾讯云上买的域名，就用腾讯云的域名解析服务了。</p><p><a href="https://console.cloud.tencent.com/" target="_blank" rel="noopener">腾讯云控制台</a> &gt; <a href="https://console.cloud.tencent.com/cns" target="_blank" rel="noopener">云解析</a> &gt; 解析 &gt; 修改 &gt; 添加记录：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314214203.png" alt></p><ul><li>主机记录：<code>@</code> 表直接解析主域名；</li><li>记录类型：<code>CNAME</code> 将域名指向另一个域名，再由另一个域名提供 ip ；</li><li>线路类型：选默认；</li><li>记录值：填写一个域名，即你原有的Github Pages 访问地址；</li><li>TTL：缓存默认时间，默认600s；</li></ul><h3 id="Github-设置"><a href="#Github-设置" class="headerlink" title="Github 设置"></a>Github 设置</h3><p>进入你的仓库 <code>&lt;your_name&gt;.github.io</code> ，点击 <code>Settings</code> ，在 Github Pages设置项中将 <code>Custom domain</code> 设置为你的个人域名：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314214240.png" alt></p><p>这时会在你的仓库目录下自动生成一个 <code>CNME</code> 文件，里面存放着你的个人域名。</p><p>上面的方式有一个问题，那就是你每次部署站点时 <code>CNME</code>都会自动消失，还需要你手动再设置一遍，所以为了方便，可以直接将 <code>CNME</code> 存放在 <code>source</code> 目录下，每次部署就会一同上传了。</p><p>完成以上设置之后，可以在浏览器中输入你自己的域名即可访问你的博客了：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1552754255288.jpg" alt></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://segmentfault.com/a/1190000011203711" target="_blank" rel="noopener">Github pages 绑定个人域名</a></li><li><a href="https://cloud.tencent.com/" target="_blank" rel="noopener">腾讯云COS</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314214524.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;购买域名&quot;&gt;&lt;a href=&quot;#购买域
      
    
    </summary>
    
      <category term="搭建博客" scheme="https://liketea.xyz/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="搭建博客" scheme="https://liketea.xyz/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="教程" scheme="https://liketea.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Github Pages 博客搭建教程（三）：文章写作</title>
    <link href="https://liketea.xyz/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/Hexo%20+%20Github%20Pages%20%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E6%96%87%E7%AB%A0%E5%86%99%E4%BD%9C/"/>
    <id>https://liketea.xyz/搭建博客/Hexo + Github Pages 博客搭建教程（三）：文章写作/</id>
    <published>2019-03-14T13:05:09.000Z</published>
    <updated>2019-03-20T06:15:47.685Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/yu1.jpg" alt></p><h2 id="写作流程"><a href="#写作流程" class="headerlink" title="写作流程"></a>写作流程</h2><p>使用 HEXO 写作博客的一般流程：</p><ol><li>创建文章：通过 <code>hexo new [layout] &lt;title&gt;</code> 创建一篇新的文章；</li><li>编辑文章：通过本地 <code>Markdown</code> 编辑器完成博客内容的写作；</li><li>发布文章：将博客发布到你的服务器；</li></ol><h3 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h3><p>你可以通过下列命令来创建一篇新文章：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><h4 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h4><p><code>Hexo</code> 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>，它们分别对应不同的路径，而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹：</p><table><thead><tr><th>布局</th><th>翻译</th><th>路径</th></tr></thead><tbody><tr><td>post</td><td>发表</td><td><code>source/_post</code></td></tr><tr><td>page</td><td>页面</td><td><code>source</code></td></tr><tr><td>draft</td><td>草稿</td><td><code>source/_drafts</code></td></tr></tbody></table><h4 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h4><p>草稿（<code>draft</code>）默认不会显示在页面中，但你可以通过以下三种方式中的任意一种来预览草稿：</p><ol><li>发布草稿：执行 <code>hexo publish [layout] &lt;title&gt;</code> 可以将草稿从<code>source/_drafts</code> 文件夹移动到 <code>source/_posts</code> 文件夹；</li><li>在执行时加上 <code>--draft</code> 参数；</li><li>把 <code>render_drafts</code> 参数设为 <code>true</code> ：这将在页面中显示全部草稿，一般不这么用；</li></ol><h4 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h4><p>在新建文章时，<code>Hexo</code> 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new photo &quot;My Gallery&quot;</span><br></pre></td></tr></table></figure><p>在执行这行指令时，<code>Hexo</code> 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>photo.md</code>，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>layout</td><td>布局</td></tr><tr><td>title</td><td>标题</td></tr><tr><td>date</td><td>文件建立日期</td></tr></tbody></table><h4 id="文件名"><a href="#文件名" class="headerlink" title="文件名"></a>文件名</h4><p><code>Hexo</code> 默认以标题做为文件名称，但您可编辑站点配置文件中的 <code>new_post_name</code> 参数来改变默认的文件名称，举例来说，设为 <code>:year-:month-:day-:title.md</code> 可让您更方便的通过日期来管理文章：</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>:title</td><td>标题（小写，空格将会被替换为短杠）</td></tr><tr><td>:year</td><td>建立的年份，比如， 2015</td></tr><tr><td>:month</td><td>建立的月份（有前导零），比如， 04</td></tr><tr><td>:i_month</td><td>建立的月份（无前导零），比如， 4</td></tr><tr><td>:day</td><td>建立的日期（有前导零），比如， 07</td></tr><tr><td>:i_day</td><td>建立的日期（无前导零），比如， 7</td></tr></tbody></table><h3 id="编辑文章"><a href="#编辑文章" class="headerlink" title="编辑文章"></a>编辑文章</h3><p>HEXO 文章编写采用 <a href="https://coding.net/help/doc/project/markdown.html" target="_blank" rel="noopener">Markdown 语法</a>进行写作，一级标题太大，建议从二级标题开始。</p><h4 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h4><p><code>Front-matter</code> 是指文章头部以 <code>---</code> 分隔的区域，用于指定个别文件的变量。以下是预先定义的参数，您可在模板中使用这些参数值并加以利用：</p><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>layout</td><td>布局</td><td></td></tr><tr><td>title</td><td>标题</td><td></td></tr><tr><td>date</td><td>建立日期</td><td>文件建立日期</td></tr><tr><td>updated</td><td>更新日期</td><td>文件更新日期</td></tr><tr><td>comments</td><td>开启文章的评论功能</td><td>true</td></tr><tr><td>tags</td><td>标签（不适用于分页）</td><td></td></tr><tr><td>categories</td><td>分类（不适用于分页）</td><td></td></tr><tr><td>permalink</td><td>覆盖文章网址</td><td></td></tr></tbody></table><p>只有文章支持分类和标签，分类具有顺序性和层次性，以下是文章分类和标签的一个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 文章在Diary/Life下</span><br><span class="line">categories:</span><br><span class="line">    - Diary</span><br><span class="line">    - Life</span><br><span class="line"># 文章有两个标签PS3、Games</span><br><span class="line">tags:</span><br><span class="line">    - PS3</span><br><span class="line">    - Games</span><br></pre></td></tr></table></figure><p>一个文章可以有多个标签，多个分类，用中括号就可以达到并列效果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 文章同时在Diary类别和Life类别下</span><br><span class="line">categories:</span><br><span class="line">    - [Diary]</span><br><span class="line">    - [Life]</span><br></pre></td></tr></table></figure><h4 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h4><p>俗话说“一图胜千言”，但在博客中插入图片一直是件让人头疼的事，在博客中插入图片大体有两种方式：</p><ol><li>作为本地文件引用：首先将图片同代码文件一起上传至站点服务器，然后以相对路径形式引用；HEXO 提供了三种图片引用方式：<ol><li>将图片放在 <code>source/images</code> 文件夹中。然后通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们；</li><li>将 <code>_config.yml</code> 文件中的 <code>post_asset_folder</code> 选项设为 <code>true</code> ，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹，这个资源文件夹将会有与这个 <code>markdown</code> 文件一样的名字，将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们；</li><li>以上两种方式会导致图片无法在主页或归档页显示的问题，为此， <a href="(https://hexo.io/zh-cn/docs/asset-folders">HEXO</a>) 推出了使用标签插件来引用图片的方式，但这种方式的可移植性不强，也不推荐；</li></ol></li><li>作为外链引用：首先将图片上传至图床（储存图片的服务器）生成外链，然后以外链形式引用；这种方式可大大简化图片管理，节约宝贵的服务器资源，加快图片加载速度，推荐使用；</li></ol><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><p>发布文章很简单，只需要经过“生成”和“部署”两步就行了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>你也可以通过以下一行命令来完成“生成”和“部署”两个过程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>如果你希望在正式发布前，先在本地查看发布后的实际效果并进行调试，也可以在“生成”步骤之后，通过以下命令打开本地服务器，您的网站会在 <code>http://localhost:4000</code> 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line"># 或者进入调试模式</span><br><span class="line">$ hexo s --debug</span><br></pre></td></tr></table></figure><p>如果你的文章符合以下两种情况之一，那么以上过程将不会对你的文章进行处理，你的文章也就不会被发布出去：</p><ol><li>文章存放在草稿文件夹 <code>source/_drafts</code> 中；</li><li>文章名称被添加到站点配置文件中的 <code>skip_render</code>；</li></ol><p>在实际写作中，更常用的写作流程如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 1. 创新草稿</span><br><span class="line">$ hexo n draft &lt;title&gt;</span><br><span class="line"># 2. 编辑文章</span><br><span class="line"># 3. 发布文章</span><br><span class="line">$ hexo publish &lt;title&gt;</span><br><span class="line"># 4. 渲染文章</span><br><span class="line">$ hexo g</span><br><span class="line"># 5. 部署文章</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h2 id="写作工具"><a href="#写作工具" class="headerlink" title="写作工具"></a>写作工具</h2><p>“工欲善其事，必先利其器”，好的写作工具能够让博客写作变得更简单、更有趣。</p><h3 id="Mweb-编辑器"><a href="#Mweb-编辑器" class="headerlink" title="Mweb 编辑器"></a>Mweb 编辑器</h3><p>Mweb 是 Mac上一款非常好用的 Markdown 写作、记笔记、静态博客生成软件，<a href="https://sspai.com/post/33855" target="_blank" rel="noopener">极力推荐</a>。</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190320125255.png" alt></p><p>Mweb 有以下一些优点:</p><ul><li>简洁的外观；</li><li>丰富的快捷键；</li><li>丰富的扩展语法；</li><li>轻松编辑表格；</li><li>图片的快速插入与统一管理；</li><li>图片自动上传图床功能；</li><li>可设置图片居左/中/右；</li><li>一键生成/上传博客；</li><li>支持各种导出格式；</li></ul><h3 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h3><p>国内外有众多图床可供选择，图床可分为两种：</p><ol><li>公共图床：利用公共服务的图片上传接口，来提供图片外链的服务，比如 Imgur 图床、微博图床、SM.MS 图床等等；</li><li>私有图床：利用各大云服务商提供的存储空间或者自己在 VPS 上使用开源软件来搭建图床，如七牛云、又拍云、阿里云 OSS、腾讯云 COS、自建图床工具 Lychee，此外 Github 仓库也可作为少量图片的图床使用，但不推荐这么做；</li></ol><p>关于各种图床的优劣可以参考文章<a href="https://zhuanlan.zhihu.com/p/35270383" target="_blank" rel="noopener">盘点一下免费好用的图床</a>，公共图床不可控也不安全、私有图床大多需要网站备案，在尝试了多个图床之后，我最后选择了腾讯云 COS 。</p><h4 id="腾讯-COS-配置"><a href="#腾讯-COS-配置" class="headerlink" title="腾讯 COS 配置"></a>腾讯 COS 配置</h4><p>通过腾讯云&gt;控制台&gt;对象存储&gt;存储同列表&gt;创建存储桶，如下：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1553061767678.jpg" alt></p><p>有两个关键的配置不能忽略：</p><ul><li>设置访问权限：将访问权限应设置为公有读私有写；</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1553061867458.jpg" alt></p><ul><li>设置防盗链：开启之后即使其他人获取到链接也无法访问相应图片；</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1553062205605.jpg" alt></p><h4 id="PicGo图片上传工具"><a href="#PicGo图片上传工具" class="headerlink" title="PicGo图片上传工具"></a>PicGo图片上传工具</h4><p><a href="https://picgo.github.io/PicGo-Doc/zh/" target="_blank" rel="noopener">PicGo</a> 是一款开源跨平台的免费图片上传工具以及图床相册管理软件，它能帮你快速地将图片上传到微博、又拍云、阿里云 OSS、腾讯云 COS、七牛、GitHub、sm.ms、Imgur 等常见的免费图床网站或云存储服务上，并自动复制图片的链接到剪贴板里，使用上非常高效便捷。</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1553058253127.jpg" alt></p><p>关于 PicGo 的下载安装和配置使用的详细过程请参照<a href="https://picgo.github.io/PicGo-Doc/zh/" target="_blank" rel="noopener">PicGo指南</a>。PicGo 支持剪切板上传和拖拽上传两种方式：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/sdf.gif" alt></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://cloud.tencent.com/document/product/436/16871" target="_blank" rel="noopener">腾讯对象存储</a></li><li><a href="https://picgo.github.io/PicGo-Doc/zh/" target="_blank" rel="noopener">PicGo指南</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/yu1.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;写作流程&quot;&gt;&lt;a href=&quot;#写作流程&quot; class=&quot;h
      
    
    </summary>
    
      <category term="搭建博客" scheme="https://liketea.xyz/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="搭建博客" scheme="https://liketea.xyz/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="教程" scheme="https://liketea.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Github Pages 博客搭建教程（二）：主题定制</title>
    <link href="https://liketea.xyz/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/Hexo%20+%20Github%20Pages%20%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%B8%BB%E9%A2%98%E5%AE%9A%E5%88%B6/"/>
    <id>https://liketea.xyz/搭建博客/Hexo + Github Pages 博客搭建教程（二）：主题定制/</id>
    <published>2019-03-14T11:05:14.000Z</published>
    <updated>2019-03-20T13:03:49.332Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/NextSchemes3.png" alt></p><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下，然后修改下配置文件即可。</p><p>这里推荐 Next 主题，该主题简洁大方美观，集成度高，定制性强，<a href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">官方文档</a>完备，十分适合新手使用。下面以 NexT 主题为例，介绍主题切换、配置方法。</p><h2 id="NexT-主题安装"><a href="#NexT-主题安装" class="headerlink" title="NexT 主题安装"></a>NexT 主题安装</h2><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><p>NexT 主题下载有两种方式：</p><ol><li>官网下载：前往 NexT 版本<a href="https://github.com/iissnan/hexo-theme-next/releases" target="_blank" rel="noopener">发布页面</a>，找到 <code>Source code</code> 点击下载，下载后解压到站点目录的 <code>themes</code> 目录下；</li><li><code>git clone</code>：直接将源码克隆到站点目录的 <code>themes</code> 目录下；</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd your-hexo-site</span><br><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>打开<code>站点配置文件</code>，找到 <code>theme</code> 字段，并将其值更改为 <code>next</code> 即可；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><h3 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h3><p>启动本地站点服务器，使用浏览器访问 <code>http://localhost:4000</code> 当你看到站点的外观与下图所示类似时即说明你已成功安装 NexT 主题，这是 NexT 默认的 <code>Scheme</code> —— <code>Muse</code>。</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314194948.png" alt></p><h2 id="NexT-主题定制"><a href="#NexT-主题定制" class="headerlink" title="NexT 主题定制"></a>NexT 主题定制</h2><p>主题风格千变万化且各有所好，建议在充分参考 NexT 官方文档和他人博客风格的前提下，选择最适合自己的风格，总的原则是：简洁、实用。下面列举了 NexT 主题常见的定制方法，如果有更多定制需求，可自行百度。</p><p>说明：</p><ol><li>配置文件：“站点配置文件”是指站点目录下的 <code>_config.yml</code> 文件，“主题配置文件”是指NexT 主题文件下的 <code>_config.yml</code> 文件。</li><li>配置生效：如果修改了站点配置文件，可能需要先清理静态文件，再重新生成静态文件，最后重新启动服务器，才会生效，如果还不行，可能需要多次生成部署；</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><h3 id="整体定制"><a href="#整体定制" class="headerlink" title="整体定制"></a>整体定制</h3><h4 id="选择-Scheme"><a href="#选择-Scheme" class="headerlink" title="选择 Scheme"></a>选择 Scheme</h4><p>NexT 提供了多种不同的外观风格 <code>Scheme</code>，几乎所有的配置都可以在 <code>Scheme</code> 之间共用，可通过更改 <code>主题配置文件</code>，搜索 <code>Scheme</code> 关键字，将你需用启用的 <code>scheme</code> 前面注释 <code>#</code> 去除即可。</p><ul><li>将默认的 <code>Muse</code> 主题注释掉，取消 <code>Mist</code> 的注释</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line">scheme: Mist</span><br><span class="line"># scheme: Pisces</span><br><span class="line"># scheme: Gemini</span><br></pre></td></tr></table></figure><ul><li>查看新 Scheme 的效果:</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314195333.png" alt></p><h4 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h4><p>观察以上截图，发现首页标签为英文，编辑<code>站点配置文件</code>，将 <code>language</code> 设置成你所需要的语言（简体中文对应<code>zh-Hans</code>）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure><h4 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h4><p>Hexo 默认字体大小为 14px，如果感觉字体太小，可打开 <code>\themes\next\source\css\ _variables\base.styl</code>文件，将 <code>font-size-base</code> 改成16px即可，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// Font size</span><br><span class="line">$font-size-base           = 16px</span><br></pre></td></tr></table></figure><h4 id="更改网页图标-Favicon"><a href="#更改网页图标-Favicon" class="headerlink" title="更改网页图标 Favicon"></a>更改网页图标 Favicon</h4><p>NexT 提供了默认的网页图标，可通过以下步骤进行自定义设置：</p><ul><li>制作 Favicon 图标：可以先在 <a href="https://www.easyicon.net/" target="_blank" rel="noopener">EasyIcon</a> 中找到一张你所喜欢的 ico 图标，然后通过<a href="http://www.bitbug.net/" target="_blank" rel="noopener">比特虫</a>在线生成两张ico图标（大小分别为16x16和32x32），将图标放在 <code>/themes/next/source/images</code> ；</li><li>修改主题配置文件：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/feather-16x16.ico</span><br><span class="line">  medium: /images/feather-32x32.ico</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-feather.png</span><br><span class="line">  safari_pinned_tab: /images/apple-touch-icon-feather.png</span><br></pre></td></tr></table></figure><ul><li>修改后的实际效果：</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315174101.png" alt></p><h4 id="隐藏网页底部-powered-By-Hexo"><a href="#隐藏网页底部-powered-By-Hexo" class="headerlink" title="隐藏网页底部 powered By Hexo"></a>隐藏网页底部 powered By Hexo</h4><p>在主题配置文件中，修改如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Hexo link (Powered by Hexo).</span><br><span class="line"> powered: false</span><br><span class="line"></span><br><span class="line"> theme:</span><br><span class="line">   # Theme &amp; scheme info link (Theme - NexT.scheme).</span><br><span class="line">   enable: false</span><br><span class="line">   # Version info of NexT after scheme info (vX.X.X).</span><br><span class="line">   version: true</span><br></pre></td></tr></table></figure><h4 id="修改网页头部图片"><a href="#修改网页头部图片" class="headerlink" title="修改网页头部图片"></a>修改网页头部图片</h4><ul><li>修改格式文件：打开 <code>hexo\themes\next\source\css\_schemes\Mist\_header.styl</code>，将第一行 <code>background:</code> 后的内容改为如下形式：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.header &#123; background: url(&apos;https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/top_pic.jpg&apos;); &#125;</span><br></pre></td></tr></table></figure><ul><li>显示效果：并不简洁美观，建议采用默认背景</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1552755988940.jpg" alt></p><h4 id="添加-README-md-文件"><a href="#添加-README-md-文件" class="headerlink" title="添加 README.md 文件"></a>添加 README.md 文件</h4><p>如果希望在项目中添加 README.md 文件，又不想对该文件进行渲染，可在 Hexo 目录下的 source 根目录下添加一个 README.md 文件，修改站点配置文件 <code>_config.yml</code>，将 <code>skip_render</code> 参数的值设置为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: README.md</span><br></pre></td></tr></table></figure><p>保存退出即可，再次使用 <code>hexo d</code> 命令部署博客的时候就不会再渲染 README.md 这个文件了。</p><h3 id="侧边栏定制"><a href="#侧边栏定制" class="headerlink" title="侧边栏定制"></a>侧边栏定制</h3><h4 id="侧边栏出现位置和时机"><a href="#侧边栏出现位置和时机" class="headerlink" title="侧边栏出现位置和时机"></a>侧边栏出现位置和时机</h4><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。可以通过修改<code>主题配置文件</code>中的 <code>sidebar</code> 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。</p><ul><li>设置侧边栏位置：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># left 靠左，right靠右</span><br><span class="line">sidebar:</span><br><span class="line">  position: left</span><br></pre></td></tr></table></figure><ul><li>设置侧边栏显示时机：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># post是默认行为，在文章页显示；另外几个选项是always、hide、remove</span><br><span class="line">sidebar:</span><br><span class="line">  display: post</span><br></pre></td></tr></table></figure><h4 id="设置站点信息"><a href="#设置站点信息" class="headerlink" title="设置站点信息"></a>设置站点信息</h4><ul><li>设置头像：编辑 <code>主题配置文件</code>，修改字段 <code>avatar</code>，值设置成头像的链接地址，可以是完整URI，也可以是本地文件路径（站点目录下的 <code>source/images</code> 或者主题目录下的 <code>source/uploads</code>）。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line"># in theme directory(source/images): /images/avatar.gif</span><br><span class="line"># in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class="line">avatar: /images/avatar.png</span><br></pre></td></tr></table></figure><ul><li>设置作者昵称：编辑 <code>站点配置文件</code>， 设置 <code>author</code> 为你的昵称；</li><li>设置站点描述：编辑 <code>站点配置文件</code>， 设置 <code>description</code> 字段为你的站点描述。站点描述可以是你喜欢的一句签名；</li><li>建站时间：编辑 <code>主题配置文件</code>，新增字段 <code>since:年份</code>；</li></ul><h4 id="修改作者头像并旋转"><a href="#修改作者头像并旋转" class="headerlink" title="修改作者头像并旋转"></a>修改作者头像并旋转</h4><p>如果希望将作者头像修改为圆形，并且实现鼠标悬浮于图片上时图片旋转的效果，可按照以下步骤进行修改：</p><ul><li>修改代码：打开<code>\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>，在里面添加如下代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">.site-author-image &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  padding: $site-author-image-padding;</span><br><span class="line">  max-width: $site-author-image-width;</span><br><span class="line">  height: $site-author-image-height;</span><br><span class="line">  border: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line">  /* 头像圆形 */</span><br><span class="line">  border-radius: 80px;</span><br><span class="line">  -webkit-border-radius: 80px;</span><br><span class="line">  -moz-border-radius: 80px;</span><br><span class="line">  box-shadow: inset 0 -1px 0 #333sf;</span><br><span class="line">  /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span><br><span class="line">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span><br><span class="line"> </span><br><span class="line">  /* 鼠标经过头像旋转360度 */</span><br><span class="line">  -webkit-transition: -webkit-transform 1.0s ease-out;</span><br><span class="line">  -moz-transition: -moz-transform 1.0s ease-out;</span><br><span class="line">  transition: transform 1.0s ease-out;</span><br><span class="line">&#125;</span><br><span class="line">img:hover &#123;</span><br><span class="line">  /* 鼠标经过停止头像旋转 </span><br><span class="line">  -webkit-animation-play-state:paused;</span><br><span class="line">  animation-play-state:paused;*/</span><br><span class="line">  /* 鼠标经过头像旋转360度 */</span><br><span class="line">  -webkit-transform: rotateZ(360deg);</span><br><span class="line">  -moz-transform: rotateZ(360deg);</span><br><span class="line">  transform: rotateZ(360deg);</span><br><span class="line">&#125;</span><br><span class="line">/* Z 轴旋转动画 */</span><br><span class="line">@-webkit-keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -moz-transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    -moz-transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>效果如图：</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314205943.png" alt></p><h4 id="设置RSS"><a href="#设置RSS" class="headerlink" title="设置RSS"></a>设置RSS</h4><p>NexT 中 RSS 有三个设置选项，满足特定的使用场景，更改 <code>主题配置文件</code>：设定 <code>rss</code> 字段的值：</p><ul><li>false：禁用 RSS，不在页面上显示 RSS 连接。</li><li>留空：使用 Hexo 生成的 Feed 链接，你可以需要先安装 hexo-generator-feed 插件。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed</span><br></pre></td></tr></table></figure><ul><li>具体的链接地址：适用于已经烧制过 Feed 的情形。</li></ul><p>重启服务器，侧边栏效果如图：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314202519.png" alt></p><h4 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h4><p>侧边栏社交链接的修改包括链接和图标两部分，打开主题配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 社交链接，键值格式是“显示文本: 链接地址 || 图标名”</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/your-user-name</span><br><span class="line">  Twitter: https://twitter.com/your-user-name</span><br><span class="line">  微博: http://weibo.com/your-user-name</span><br><span class="line">  豆瓣: http://douban.com/people/your-user-name</span><br><span class="line">  知乎: http://www.zhihu.com/people/your-user-name</span><br><span class="line">  </span><br><span class="line"># 社交图标，键值格式是“显示文本: Font Awesome 图标名称”，enable 选项用于控制是否显示图标</span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  # Icon Mappings</span><br><span class="line">  GitHub: github</span><br><span class="line">  Twitter: twitter</span><br><span class="line">  微博: weibo</span><br></pre></td></tr></table></figure><h4 id="侧边友情链接"><a href="#侧边友情链接" class="headerlink" title="侧边友情链接"></a>侧边友情链接</h4><p>友情链接可用于提供一些关联网站地址，或者推荐文章。</p><ul><li>编辑 <code>主题配置文件</code>：友情链接包含两个部分，① 友情链接名称、图标；② 每个友情链接的名称、地址；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Blog rolls</span><br><span class="line"># 友情链接本身的名字和图标</span><br><span class="line">links_icon: plane</span><br><span class="line">links_title: 友情链接</span><br><span class="line"># 友情链接显示格式：竖、横</span><br><span class="line">links_layout: block</span><br><span class="line">#links_layout: inline</span><br><span class="line"># 友情链接名称、地址</span><br><span class="line">links:</span><br><span class="line">  likew: https://likew.bitcron.com</span><br></pre></td></tr></table></figure><ul><li>侧边栏最终效果：</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314203250.png" alt></p><h3 id="首页定制"><a href="#首页定制" class="headerlink" title="首页定制"></a>首页定制</h3><h4 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h4><p>菜单配置包括三个部分：</p><ol><li>菜单项：名称和链接，名称指在内部文件中使用的变量名；</li><li>菜单项文本：菜单在页面上显示的文字；</li><li>菜单项图标：NexT 主题默认集成了识别<a href="http://www.bootcss.com/p/font-awesome/#icons-web-app" target="_blank" rel="noopener">Font Awesome图标</a>的方法，只需要在里面找到想要图标的名称，去掉前缀<code>icon-</code> 就可以拿过来直接使用，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题；</li></ol><p>编辑主题配置文件，修改以下内容：</p><ul><li>设定菜单项和菜单项图标：menu下的设置项格式为<code>菜单项名称: 链接路径 || 菜单项图标</code>；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  schedule: /schedule/ || calendar</span><br><span class="line">  sitemap: /sitemap.xml || sitemap</span><br></pre></td></tr></table></figure><ul><li>设置菜单项文本：如果要修改菜单项文本，可打开 NexT 主题目录下的 <code>languages/{language}.yml</code>（{language} 为你所使用的语言），进行编辑修改；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 归档</span><br><span class="line">  categories: 分类</span><br><span class="line">  tags: 标签</span><br><span class="line">  about: 关于</span><br><span class="line">  search: 搜索</span><br><span class="line">  commonweal: 公益404</span><br><span class="line">  something: 有料</span><br></pre></td></tr></table></figure><p>保留你需要的菜单项后，实际效果如图：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314200100.png" alt></p><h4 id="添加标签页面"><a href="#添加标签页面" class="headerlink" title="添加标签页面"></a>添加标签页面</h4><p>新建“标签”页面，并在菜单中显示“标签”链接，在标签页展示站点所有标签，如果所有文章都没有标签则标签页将是空的。</p><p>配置方法：</p><ul><li>新建页面：在终端窗口下，定位到 Hexo 站点目录下，使用 <code>hexo new page</code> 新建一个页面，命名为 <code>tags</code> ；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 切换到站点目录</span><br><span class="line">$ cd your-hexo-site</span><br><span class="line"># 新建tags页面，会在source目录下自动生成tags文件夹</span><br><span class="line">$ hexo new page tags</span><br><span class="line"># tags目录下包含index文件夹和index.md文件</span><br><span class="line">$ tree ./source/tags</span><br><span class="line">    ./source/tags</span><br><span class="line">    ├── index</span><br><span class="line">    └── index.md</span><br></pre></td></tr></table></figure><ul><li>设置页面类型：编辑刚才新建的<code>index.md</code>文件，将页面类型设置为tags， 主题将自动为这个页面显示标签云，一般标签页不显示评论；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2019-03-12 16:15:10</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>修改菜单：在菜单中添加链接，编辑<code>主题配置文件</code>，添加 <code>tags</code> 到 menu 中，如下:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  tags: /tags</span><br></pre></td></tr></table></figure><ul><li>设置文章标签：在文章 <code>front-matter</code> 添加 <code>tags</code> 字段，可设置文章的标签：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 测试标签页</span><br><span class="line">date: 2019-03-12 16:34:39</span><br><span class="line">tags:</span><br><span class="line">    - 标签1</span><br><span class="line">    - 标签2</span><br><span class="line">    - 标签3</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>实际效果：启动本地站点服务器，使用浏览器访问 <code>http://localhost:4000</code> ，标签页如图所示。</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314201002.png" alt></p><h4 id="添加分类页面"><a href="#添加分类页面" class="headerlink" title="添加分类页面"></a>添加分类页面</h4><p>“分类”和“标签”都可以用来对文章进行管理，区别在于分类多级、有序而标签同级、无序。分类是一种更加精细的文件管理方式，可以按照主题结构树来管理文章，标签则是一种平面化的管理方式，适合于快速定位到一些关键词。</p><ul><li>新建页面：在站点目录下创建分类页面</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd your-hexo-site</span><br><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><ul><li>设置页面类型：打开 <code>categories/index.md</code> 文件，修改页面类型，一般分类页面不显示评论：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2014-12-22 12:39:04</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>修改菜单：打开主题配置文件，修改 <code>menu</code> 下的<code>categories</code> 为 <code>/categories</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  categories: /categories</span><br></pre></td></tr></table></figure><ul><li>实际效果：分类页面显示分类树结构，但不会显示具体分类下的文章。点击具体的分类类别，可显示该类别下的所有文章：</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314201055.png" alt></p><h4 id="首页文章以摘要形式显示"><a href="#首页文章以摘要形式显示" class="headerlink" title="首页文章以摘要形式显示"></a>首页文章以摘要形式显示</h4><ul><li>修改主题配置文件：打开<code>主题配置文件</code>，找到如下位置，修改</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 其中length代表显示摘要的截取字符长度</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><ul><li>修改后的效果如图：</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314210243.png" alt></p><h4 id="设置首页文章显示篇数"><a href="#设置首页文章显示篇数" class="headerlink" title="设置首页文章显示篇数"></a>设置首页文章显示篇数</h4><ul><li>安装插件：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-index</span><br><span class="line">npm install --save hexo-generator-archive</span><br><span class="line">npm install --save hexo-generator-tag</span><br></pre></td></tr></table></figure><ul><li>修改站点配置文件：在 <code>站点配置文件</code> 中，添加如下内容，其中 <code>per_page</code> 字段是你希望设定的显示篇数。<code>index</code>，<code>archive</code> 及 <code>tag</code> 开头分表代表主页，归档页面和标签页面</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">index_generator:</span><br><span class="line">  path: &apos;&apos;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date   # 反之，date时间早的在前面</span><br><span class="line"></span><br><span class="line">archive_generator:</span><br><span class="line">  per_page: 20</span><br><span class="line">  yearly: true</span><br><span class="line">  monthly: true</span><br><span class="line"></span><br><span class="line">tag_generator:</span><br><span class="line">  per_page: 10</span><br></pre></td></tr></table></figure><h3 id="文章页定制"><a href="#文章页定制" class="headerlink" title="文章页定制"></a>文章页定制</h3><h4 id="设置代码高亮"><a href="#设置代码高亮" class="headerlink" title="设置代码高亮"></a>设置代码高亮</h4><p>NexT 使用 Tomorrow Theme 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 normal 主题，可选的值有 normal，night， night blue， night bright， night eighties：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314201404.png" alt></p><p>更改 highlight_theme 字段，将其值设定成你所喜爱的高亮主题（默认的就挺好），例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Code Highlight theme</span><br><span class="line"># Available value:</span><br><span class="line">#    normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line">highlight_theme: normal</span><br></pre></td></tr></table></figure><h4 id="修改文章底部带-号的标签"><a href="#修改文章底部带-号的标签" class="headerlink" title="修改文章底部带 # 号的标签"></a>修改文章底部带 # 号的标签</h4><p>修改模板 <code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 <code>#</code> 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code>，效果如图：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314204634.png" alt></p><h4 id="文章顶部显示更新时间"><a href="#文章顶部显示更新时间" class="headerlink" title="文章顶部显示更新时间"></a>文章顶部显示更新时间</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Post meta display settings 文章显示信息</span><br><span class="line">post_meta:</span><br><span class="line">  item_text: true</span><br><span class="line">  created_at: true</span><br><span class="line">  updated_at: true</span><br><span class="line">  categories: true</span><br></pre></td></tr></table></figure><h4 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h4><p>NexT 支持微信打赏和支付宝打赏，只需要在 <code>主题配置文件</code> 中填入微信或支付宝收款二维码图片地址（绝对地址从source目录起）即可开启该功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</span><br><span class="line">wechatpay: /path/to/wechat-reward-image</span><br><span class="line">alipay: /path/to/alipay-reward-image</span><br></pre></td></tr></table></figure><p>实际效果:</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314203519.png" alt></p><h3 id="设置动画效果"><a href="#设置动画效果" class="headerlink" title="设置动画效果"></a>设置动画效果</h3><h4 id="设置加载动画"><a href="#设置加载动画" class="headerlink" title="设置加载动画"></a>设置加载动画</h4><p>NexT 默认开启动画效果，效果使用 JavaScript 编写，因此需要等待 JavaScript 脚本完全加载完毕后才会显示内容。 如果您比较在乎速度，可以将 <code>use_motion</code> 设置为 false 来关闭加载动画；</p><h4 id="添加顶部加载条"><a href="#添加顶部加载条" class="headerlink" title="添加顶部加载条"></a>添加顶部加载条</h4><p>修改主题配置文件 <code>_config.yml</code> 将 <code>pace</code>设为 <code>true</code> 就行了，你还可以换不同样式的加载条，如下图：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># Progress bar in the top during page loading.</span><br><span class="line">pace: true</span><br><span class="line"># Themes list:</span><br><span class="line">#pace-theme-big-counter</span><br><span class="line"># 跳跳球</span><br><span class="line">#pace-theme-bounce</span><br><span class="line">#pace-theme-barber-shop</span><br><span class="line"># 原子转</span><br><span class="line">#pace-theme-center-atom</span><br><span class="line">#pace-theme-center-circle</span><br><span class="line">#pace-theme-center-radar</span><br><span class="line"># 进度条</span><br><span class="line">#pace-theme-center-simple</span><br><span class="line">#pace-theme-corner-indicator</span><br><span class="line">#pace-theme-fill-left</span><br><span class="line">#pace-theme-flash</span><br><span class="line">#pace-theme-loading-bar</span><br><span class="line"># pace-theme-mac-osx</span><br><span class="line"># 简约式</span><br><span class="line">#pace-theme-minimal</span><br><span class="line"># For example</span><br><span class="line"># pace_theme: pace-theme-center-simple</span><br><span class="line">pace_theme: pace-theme-minimal</span><br></pre></td></tr></table></figure><p>实际效果：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/5308475-2f5051d9f0352b90.gif" alt></p><h4 id="点击出现红心效果"><a href="#点击出现红心效果" class="headerlink" title="点击出现红心效果"></a>点击出现红心效果</h4><ul><li>添加 js 文件：在 <code>hexo\themes\next\source\js\src\</code> 目录下新增文件 <code>love.js</code>，文件内容如下：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e, t, a</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>), o(), r()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; d.length; e++)</span><br><span class="line">            d[e].alpha &lt;= <span class="number">0</span> ? (t.body.removeChild(d[e].el), d.splice(e, <span class="number">1</span>)) : (d[e].y--, d[e].scale += <span class="number">.004</span>, d[e].alpha -= <span class="number">.013</span>, d[e].el.style.cssText = <span class="string">"left:"</span> + d[e].x + <span class="string">"px;top:"</span> + d[e].y + <span class="string">"px;opacity:"</span> + d[e].alpha + <span class="string">";transform:scale("</span> + d[e].scale + <span class="string">","</span> + d[e].scale + <span class="string">") rotate(45deg);background:"</span> + d[e].color + <span class="string">";z-index:99999"</span>);</span><br><span class="line">        requestAnimationFrame(r)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t = <span class="string">"function"</span> == <span class="keyword">typeof</span> e.onclick &amp;&amp; e.onclick;</span><br><span class="line">        e.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            t &amp;&amp; t(), i(e)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = t.createElement(<span class="string">"div"</span>);</span><br><span class="line">        a.className = <span class="string">"heart"</span>, d.push(&#123;</span><br><span class="line">            el: a,</span><br><span class="line">            x: e.clientX - <span class="number">5</span>,</span><br><span class="line">            y: e.clientY - <span class="number">5</span>,</span><br><span class="line">            scale: <span class="number">1</span>,</span><br><span class="line">            alpha: <span class="number">1</span>,</span><br><span class="line">            color: s()</span><br><span class="line">        &#125;), t.body.appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = t.createElement(<span class="string">"style"</span>);</span><br><span class="line">        a.type = <span class="string">"text/css"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            a.appendChild(t.createTextNode(e))</span><br><span class="line">        &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">            a.styleSheet.cssText = e</span><br><span class="line">        &#125;</span><br><span class="line">        t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"rgb("</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">")"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> d = [];</span><br><span class="line">    e.requestAnimationFrame = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                setTimeout(e, <span class="number">1e3</span> / <span class="number">60</span>)</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;(), n()</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><ul><li>修改配置：在文件 <code>hexo\themes\next\layout\_layout.swig</code> 底部的 <code>&lt;/body&gt;</code> 标签上一行增加：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>实际效果:</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/out1.gif" alt></p><h4 id="设置背景动画"><a href="#设置背景动画" class="headerlink" title="设置背景动画"></a>设置背景动画</h4><p>编辑 <code>主题配置文件</code>， 搜索 <code>canvas_nest</code> 或 <code>three_waves</code>，根据您的需求设置值为 true 或者 false 即可（会干扰读者注意力，建议关闭）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Canvas-nest</span><br><span class="line">canvas_nest: true</span><br><span class="line"># three_waves</span><br><span class="line"># three_waves: true</span><br><span class="line"># canvas_lines</span><br><span class="line"># canvas_lines: true</span><br><span class="line"># canvas_sphere</span><br><span class="line"># canvas_sphere: True</span><br></pre></td></tr></table></figure><p><code>Canvas-nest</code> 的实际效果：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/aa.gif" alt></p><h2 id="第三方插件使用"><a href="#第三方插件使用" class="headerlink" title="第三方插件使用"></a>第三方插件使用</h2><p>静态站点拥有一定的局限性，因此我们需要借助于第三方服务来扩展站点的功能。 以下是 NexT 目前支持的第三方服务，你可以根据你的需求集成一些功能进来。</p><h3 id="添加站内搜索"><a href="#添加站内搜索" class="headerlink" title="添加站内搜索"></a>添加站内搜索</h3><p>配置方法如下：</p><ul><li>安装 <code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><ul><li>编辑站点配置文件，新增以下内容到任意位置：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">   path: search.xml</span><br><span class="line">   field: post</span><br><span class="line">   format: html</span><br><span class="line">   limit: 10000</span><br></pre></td></tr></table></figure><ul><li>编辑主题配置文件，启用本地搜索功能：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">   enable: true</span><br></pre></td></tr></table></figure><ul><li>站点搜索效果：</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315111338.png" alt></p><h3 id="添加评论区"><a href="#添加评论区" class="headerlink" title="添加评论区"></a>添加评论区</h3><p>NexT 支持多款评论系统：</p><ol><li>多说：已挂；</li><li>畅言：需要备案；</li><li>Disqus：已墙；</li><li>valine：LeanCloud提供的后端云服务，可用于统计网址访问数据，分为开发版和商用版，只需要注册生成应用App ID和App Key即可使用；</li><li>来必力：来自韩国，使用邮箱注册；</li><li>Gitment：一款基于 <code>GitHub Issues</code> 的评论系统，支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 <code>Markdown / GFM</code> 和代码高亮支持，尤为适合各种基于GitHub Pages的静态博客或项目页面；</li></ol><h4 id="DISQUS"><a href="#DISQUS" class="headerlink" title="DISQUS"></a>DISQUS</h4><p>编辑 <code>主题配置文件</code>， 将 <code>disqus</code> 下的 <code>enable</code> 设定为 <code>true</code>，同时提供您的 <code>shortname</code>，<code>count</code> 用于指定是否显示评论数量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">disqus:</span><br><span class="line">  enable: false</span><br><span class="line">  shortname:</span><br><span class="line">  count: true</span><br></pre></td></tr></table></figure><p>需要注册 <code>disqus</code> 账号后才可参与评论，效果如下：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315111715.png" alt></p><h4 id="gitment"><a href="#gitment" class="headerlink" title="gitment"></a>gitment</h4><p>Gitment 使用 <code>GitHub Issues</code> 作为评论系统，在接入 Gitment 前，需要获得 GitHub 的授权，获得相应的客户端id和客户端私钥，以备站点使用。gitment 的配置方法:</p><ul><li>创建 <code>oAuth App</code> ：<code>github首页</code> &gt; <code>settings</code> &gt; <code>Developer settings</code> &gt; <code>OAuth Apps</code> &gt; <code>New oAuth App</code>，<code>Homepage URL</code> 和 <code>Authorization callback URL</code> 都写上你的 github 博客首页地址（如果绑定了个人域名，则写完整的新域名地址），比如 <code>https://liketea.xyz</code>，点击 <code>Register application</code>即可完成注册，生成 <code>Client ID</code> 和 <code>Client Secret</code>；</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315193518.png" alt></p><ul><li>修改 <code>主题配置文件</code> ：最重要的就是 <code>github_repo</code>，可以是你托管博客静态文件的仓库，也可以是新仓库，注意是仓库名称而不是仓库地址；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">gitment:</span><br><span class="line">  enable: true</span><br><span class="line">  mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span><br><span class="line">  count: true # Show comments count in post meta area</span><br><span class="line">  lazy: false # Comments lazy loading with a button</span><br><span class="line">  cleanly: true # Hide &apos;Powered by ...&apos; on footer, and more</span><br><span class="line">  language: zh-CN # Force language, or auto switch by theme</span><br><span class="line">  github_user: liketea # MUST HAVE, Your Github ID</span><br><span class="line">  github_repo: liketea.github.io  # MUST HAVE, The repo you use to store Gitment comments</span><br><span class="line">  client_id: a52dc...0f3b156f7c # MUST HAVE, Github client id for the Gitment</span><br><span class="line">  client_secret: 2307d156a...a8495b1b68a3a3ae # EITHER this or proxy_gateway, Github access secret token for the Gitment</span><br><span class="line">  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect</span><br><span class="line">  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled</span><br></pre></td></tr></table></figure><ul><li>重新部署：通过 <code>hexo g -d</code> 重新部署站点，进入一篇文章的评论区；</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315182559.png" alt></p><ul><li>登入授权：点击登入，对评论区进行授权；</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315182527.png" alt></p><ul><li>解决无法登陆的问题：如果点击授权之后，评论区一直在转圈圈，但是登录不进去</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190316171023.png" alt></p><ul><li>打开浏览器的调试功能，发现报了个错误~点击后面的网址，一路点击高级、继续前往</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190316171402.png" alt></p><ul><li>然后你会发现依旧访问不了，不过不用理会，此时gitment已经可以登录啦~</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190316172829.png" alt></p><ul><li>最后初始化评论：每一篇文章都需要进行初始化才能开始评论，目前还没有较好的一键初始化方法；</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190316171555.png" alt></p><h4 id="来必力"><a href="#来必力" class="headerlink" title="来必力"></a>来必力</h4><p>以上评论系统，要么已经挂掉了、要么被墙了、要么各种BUG、要么原始界面奇丑，通过各种尝试发现还是来必力最好用：</p><ul><li>注册登陆 <a href="http://www.laibili.com.cn" target="_blank" rel="noopener">来必力</a> 获取你的 <code>LiveRe UID</code>：点击安装免费的city版本，安装成功后点击代码管理，复制其中的 <code>data-uid</code> 字段</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1552725793366.jpg" alt></p><ul><li>编辑主题配置文件，填写 <code>livere_uid</code>：将复制的 <code>data-uid</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># You can get your uid from https://livere.com/insight/myCode (General web site)</span><br><span class="line">livere_uid: &quot;MTAyMC80M...Tc0NQ==&quot;</span><br></pre></td></tr></table></figure><ul><li>实际效果：来必力支持使用已有社交网站(SNS)账号登录</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1552744311918.jpg" alt></p><h3 id="添加统计分析"><a href="#添加统计分析" class="headerlink" title="添加统计分析"></a>添加统计分析</h3><h4 id="统计文章阅读次数"><a href="#统计文章阅读次数" class="headerlink" title="统计文章阅读次数"></a>统计文章阅读次数</h4><p>LeanCloud 可以统计单篇文章阅读次数，配置过程如下:</p><ul><li>注册 <a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>：完成邮箱激活，进入控制台页面；</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315145826.png" alt></p><ul><li>创建应用：创建一个新应用，名称无所谓，点击应用进入；</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315145939.png" alt></p><ul><li>创建名称为Counter的Class：名称必须为Counter；</li><li>查看应用 key：在所创建的应用的<code>设置-&gt;应用key</code> 中查看 <code>app_id</code> 和<code>app_key</code> ；</li><li>修改主题配置文件：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: m135LmdEWo9GrD-gzGzoHsz</span><br><span class="line">  app_key: CWheAQhgeEYEa1nDYn</span><br></pre></td></tr></table></figure><ul><li>重新部署 Hexo 博客：重新部署后便可以在博客主页以及每篇文章中显示阅读次数，如图所示</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315161834.png" alt></p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315150436.png" alt></p><p>说明：</p><ol><li>为了安全，设置网站的安全域名：设置——安全中心——Web安全域名；</li><li>记录文章访问量的唯一标识符是文章的发布日期以及文章的标题，因此请确保这两个数值组合的唯一性，如果你更改了这两个数值，会造成文章阅读数值的清零重计；</li></ol><h4 id="添加文章阅读量排行榜"><a href="#添加文章阅读量排行榜" class="headerlink" title="添加文章阅读量排行榜"></a>添加文章阅读量排行榜</h4><ul><li>新建排行页面：在根目录路径下，执行 <code>hexo new page &quot;rank&quot;</code>；</li><li>编辑主题配置文件：加上菜单 rank 和它的 icon:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  rank: /rank/ || signal</span><br></pre></td></tr></table></figure><ul><li>在语言文件中加上菜单 rank，以中文为例，在 <code>/themes/next/languages/zh_Hans.yml</code> 中添加：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 归档</span><br><span class="line">  categories: 分类</span><br><span class="line">  tags: 标签</span><br><span class="line">  about: 关于</span><br><span class="line">  search: 搜索</span><br><span class="line">  schedule: 日程表</span><br><span class="line">  sitemap: 站点地图</span><br><span class="line">  commonweal: 公益404</span><br><span class="line">  rank: 排行榜</span><br></pre></td></tr></table></figure><ul><li>编辑~/source/top/index.md：必须将里面的里面的 <code>app_id</code> 和 <code>app_key</code> 替换为你的 <code>LeanCloud</code> 在主题配置文件中的值；必须替换里面博客的链接；1000 是显示文章的数量，其它可以自己看情况更改；</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 排行榜</span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br><span class="line">&lt;div id=<span class="string">"hot"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;AV.initialize(<span class="string">"app_id"</span>, <span class="string">"app_key"</span>);&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">  <span class="keyword">var</span> time=<span class="number">0</span></span><br><span class="line">  <span class="keyword">var</span> title=<span class="string">""</span></span><br><span class="line">  <span class="keyword">var</span> url=<span class="string">""</span></span><br><span class="line">  <span class="keyword">var</span> query = <span class="keyword">new</span> AV.Query(<span class="string">'Counter'</span>);</span><br><span class="line">  query.notEqualTo(<span class="string">'id'</span>,<span class="number">0</span>);</span><br><span class="line">  query.descending(<span class="string">'time'</span>);</span><br><span class="line">  query.limit(<span class="number">1000</span>);</span><br><span class="line">  query.find().then(<span class="function"><span class="keyword">function</span> (<span class="params">todo</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> result=todo[i].attributes;</span><br><span class="line">      time=result.time;</span><br><span class="line">      title=result.title;</span><br><span class="line">      url=result.url;</span><br><span class="line">      <span class="keyword">var</span> content=<span class="string">"&lt;p&gt;"</span>+<span class="string">"&lt;font color='#1C1C1C'&gt;"</span>+<span class="string">"【文章热度:"</span>+time+<span class="string">"℃】"</span>+<span class="string">"&lt;/font&gt;"</span>+<span class="string">"&lt;a href='"</span>+<span class="string">"https://liketea.github.io/"</span>+url+<span class="string">"'&gt;"</span>+title+<span class="string">"&lt;/a&gt;"</span>+<span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">"hot"</span>).innerHTML+=content</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"error"</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>实际效果：</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1552762267890.jpg" alt></p><h4 id="统计站点访问次数"><a href="#统计站点访问次数" class="headerlink" title="统计站点访问次数"></a>统计站点访问次数</h4><p>NexT 集成了“不蒜子服务”，可以统计站点 <code>uv</code>（全站访客人次）、<code>pv</code>（全站点击次数）和单页面 <code>pv</code>，配置更加方便。</p><ul><li>编辑 <code>主题配置文件</code> 中的 <code>busuanzi_count</code> 配置项：当 <code>enable: true</code> 时，代表开启全局开关，若<code>site_uv</code> 、<code>site_pv</code> 、<code>page_pv</code> 的值均为 false 时，不蒜子仅作记录而不会在页面上显示</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: true</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt;</span><br><span class="line">  site_uv_footer: 人次</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: true</span><br><span class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</span><br><span class="line">  site_pv_footer: 次</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: false</span><br><span class="line">  page_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</span><br><span class="line">  page_pv_footer: 次</span><br></pre></td></tr></table></figure><ul><li>禁用单页面pv：不蒜子的 <code>单页面pv</code> 默认显示在文章标题下边，但是却不会在站点主页显示，因此我们还是选择用 <code>LeanCloud</code> 来显示 <code>单页面pv</code> 而使用不蒜子来显示 <code>站点uv, pv</code> ，实际效果如图所示：</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315161052.png" alt></p><p>如果发现页面中的统计数据都不显示：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315162709.png" alt></p><p>那是因为不蒜子统计的js文件找不到了，官方给出了相应的方法，即只需要更改 next 主题下的不蒜子 插件的 js 引用链接即可。进入 hexo 博客项目的 themes 目录下，在 next 主题目录中的 <code>layout/_third-party/analytics/</code> 下找到 <code>busuanzi-counter.swig</code> 文件，将:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="keyword">async</span> src=<span class="string">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>替换为如下代码既可：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="keyword">async</span> src=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="统计文章字数"><a href="#统计文章字数" class="headerlink" title="统计文章字数"></a>统计文章字数</h4><ul><li>安装插件:在根目录下安装 <code>hexo-wordcount</code>，运行：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><ul><li>修改主题配置文件：然后在主题的配置文件中，配置如下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true  # 是否显示项目文字</span><br><span class="line">  wordcount: true  # 是否显示统计字数</span><br><span class="line">  min2read: true  # 是否显示阅读时长（分钟）</span><br><span class="line">  totalcount: true  # 是否显示总字数</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure><ul><li>实际效果:</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1552754006485.jpg" alt></p><h3 id="添加分享服务"><a href="#添加分享服务" class="headerlink" title="添加分享服务"></a>添加分享服务</h3><p><code>jiathis</code> 已关闭服务，我采用了  <code>needmoreshare2</code>，其配置过程如下：</p><ul><li>编辑主题配置文件中的 <code>needmoreshare2</code> ：将<code>enable</code> 设置为 <code>true</code>：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">needmoreshare2:</span><br><span class="line">  enable: true</span><br><span class="line">  # 底部提交分享按钮</span><br><span class="line">  postbottom:</span><br><span class="line">    enable: false</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: box</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: bottomCenter</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br><span class="line">  # 左侧悬浮分享按钮 </span><br><span class="line">  float:</span><br><span class="line">    enable: true</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: box</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: topRight</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br></pre></td></tr></table></figure><ul><li>实际效果如图，包含了微博、微信、QQ、豆瓣等众多渠道：</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315170100.png" alt></p><p>以上只有微信点击无法分享，只需修改<code>themes\next\source\lib\needsharebutton\needsharebutton.js</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 把</span><br><span class="line">var imgSrc = &quot;https://api.qinco.me/api/qr?size=400&amp;content=&quot; + encodeURIComponent(myoptions.url);</span><br><span class="line"># 改为</span><br><span class="line">var imgSrc = &quot;http://api.qrserver.com/v1/create-qr-code/?size=150x150&amp;data=&quot; + encodeURIComponent(myoptions.url);</span><br></pre></td></tr></table></figure><p>该分享方式为生成博客的二维码，手机扫码之后即可分享:</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190315170849.png" alt></p><h2 id="为博客添加其他功能"><a href="#为博客添加其他功能" class="headerlink" title="为博客添加其他功能"></a>为博客添加其他功能</h2><h3 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h3><ul><li>修改代码：打开主题文件夹/layout/_partials/head.swig<br>在首句<meta charset="UTF-8">后面插入以下代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        if(&apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">            if (prompt(&apos;请输入文章密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">                alert(&apos;密码错误&apos;);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>为文章设置密码：在需要加密的文章里加进password: 你要设的密码，像这样：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 13</span><br><span class="line">date: 2019-03-14 21:06:14</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">password: 123456</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>实际效果：点击文章，需要输入正确密码</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/out.gif" alt></p><h3 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h3><ul><li>修改 <code>hero-generator-index</code> 插件：把文件：<code>node_modules/hexo-generator-index/lib/generator.js</code> 内的代码替换为：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line">var pagination = require(&apos;hexo-pagination&apos;);</span><br><span class="line">module.exports = function(locals)&#123;</span><br><span class="line">  var config = this.config;</span><br><span class="line">  var posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">        if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</span><br><span class="line">            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排</span><br><span class="line">            else return b.top - a.top; // 否则按照top值降序排</span><br><span class="line">        &#125;</span><br><span class="line">        else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span><br><span class="line">            return -1;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else return b.date - a.date; // 都没定义按照文章日期降序排</span><br><span class="line">    &#125;);</span><br><span class="line">  var paginationDir = config.pagination_dir || &apos;page&apos;;</span><br><span class="line">  return pagination(&apos;&apos;, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [&apos;index&apos;, &apos;archive&apos;],</span><br><span class="line">    format: paginationDir + &apos;/%d/&apos;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>在文章中添加 top 值：数值越大文章越靠前</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 13</span><br><span class="line">date: 2017-05-22 22:45:48</span><br><span class="line">tags: </span><br><span class="line">categories: </span><br><span class="line">top: 100</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="添加网易云音乐"><a href="#添加网易云音乐" class="headerlink" title="添加网易云音乐"></a>添加网易云音乐</h3><p>我将网易云音乐播放器放在了侧边栏，想要听的朋友可以手动点击播放，配置方法如下：</p><ul><li>生成外链播放器：在<a href="https://music.163.com" target="_blank" rel="noopener">网页版网易云音乐</a>中搜索我们想要插入的音乐或歌单，然后点击“生成外链播放器”</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1552759046750.jpg" alt></p><ul><li>设置ifame插件参数：选择 <code>310x90</code>，取消勾选自动播放</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1552758972772.jpg" alt></p><ul><li>插入代码：将网易云音乐插件生成的 HDML 代码插入到文件 <code>layout\_macro\sidebar.swig</code><br>中 <code>&lt;/aside&gt;</code>上一行，类似于以下代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"music163player"</span>&gt;</span><br><span class="line">    &lt;iframe frameborder=<span class="string">"no"</span> border=<span class="string">"0"</span> marginwidth=<span class="string">"0"</span> marginheight=<span class="string">"0"</span> width=<span class="number">280</span> height=<span class="number">86</span> src=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=38358214&amp;auto=0&amp;height=66"</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure><ul><li>实际效果：可操作播放、暂停，上/下一曲，如果尺寸是 <code>310x413</code> 则可以展开播放列表</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/1552759256726.jpg" alt></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">hexo的next主题个性化教程:打造炫酷网站</a></li><li><a href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">NexT官方文档</a></li><li><a href="http://www.jeyzhang.com/next-theme-personal-settings.html" target="_blank" rel="noopener">NexT主题个性化设置</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/NextSchemes3.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;Hexo 安装主题的方式非常简单，只需要将主题文件拷
      
    
    </summary>
    
      <category term="搭建博客" scheme="https://liketea.xyz/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="搭建博客" scheme="https://liketea.xyz/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="教程" scheme="https://liketea.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Github Pages 博客搭建教程（一）：博客搭建</title>
    <link href="https://liketea.xyz/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/Hexo%20+%20Github%20Pages%20%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>https://liketea.xyz/搭建博客/Hexo + Github Pages 博客搭建教程（一）：博客搭建/</id>
    <published>2019-03-14T06:03:45.000Z</published>
    <updated>2019-03-19T09:18:12.370Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314172637.png" alt></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着移动互联网的到来，使用电脑订阅资讯的时代一去不复返，博客时代芳华已逝，但内容创作永不过时。这里我想先谈一下自己对于个人博客的看法。</p><p>为什么要写博客：</p><ol><li>践行“费曼技巧”：与假想听众一起学习是最佳的学习方式；</li><li>建立“云知识库”：大脑的记忆总是模糊、有限而易逝的，博客便是整理过的记忆，清晰、持久而又便于回忆；</li></ol><p>为什么要搭建个人博客：</p><ol><li>公共博客平台不可控或收费；</li><li>收获自主权和归属感；</li></ol><p>为什么选择 <code>Hexo + GitPages</code> 搭建个人博客：</p><ol><li>轻量：没有麻烦的配置，使用标记语 <code>Markdown</code> ，无需自己搭建服务器；</li><li>免费：免费托管 <code>Github</code> 仓库，有 1G 免费空间；</li><li>通用：是目前比较流行的方案，社区活跃，不断创新；</li></ol><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>博客搭建过程主要涉及 <code>Hexo</code> 和 <code>Github Pages</code> 两个工具，在开始搭建博客前，首先要完成以下准备工作：</p><ul><li><a href="https://github.com/join" target="_blank" rel="noopener">注册 Github 账号</a>：按指示完成注册即可；</li><li>创建两个 Github 仓库：一个仓库名为<code>&lt;username&gt;.github.io</code>，用于托管博客的静态文件（<code>public</code>文件夹）、生成 <code>Github Pages</code> 展示页面；另一个仓库名为<code>&lt;username&gt;.github.source</code> 用于文章备份，可兼作图床（<code>source</code> 文件夹）；</li><li><a href="https://git-scm.com/book/zh/v1/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git" target="_blank" rel="noopener">本地安装git</a>：先在本地安装 <a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">homebrew 软件包管理工具</a>，再通过 <code>brew install git</code> 安装 <code>git</code> 工具，通过<code>git version</code> 查看 git 是否成功安装；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 安装homebrew</span><br><span class="line">$ /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br><span class="line"># 安装git</span><br><span class="line">$ brew install git</span><br><span class="line">$ git version</span><br><span class="line">git version 2.15.0</span><br></pre></td></tr></table></figure><ul><li><a href="https://git-scm.com/book/zh/v1/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5" target="_blank" rel="noopener">配置git公钥</a>：Git 服务器都会选择使用 SSH 公钥来进行授权，配置方法也很简单，在本地通过 <code>ssh-keygen</code> 生成密钥对之后，将<code>./.ssh/id_rsa.pub</code> 中的公钥添加到github账号<code>SSH key</code>；</li></ul><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314183306.png" alt></p><ul><li>安装<code>node.js</code>：<code>brew install node</code>安装，<code>node -v</code>检查是否安装成功；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ brew install node</span><br><span class="line">$ node -v</span><br><span class="line">v8.4.0</span><br></pre></td></tr></table></figure><ul><li><a href="https://hexo.io/zh-cn/docs/setup" target="_blank" rel="noopener">安装Hexo</a>：在安装好 <code>git</code> 和 <code>node.js</code> 之后就可以使用<code>npm install -g hexo-cli</code> 安装 <code>hexo</code> 了，可通过 <code>hexo version</code> 查看<code>hexo</code> 版本信息；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ hexo version</span><br><span class="line">hexo-cli: 1.1.0</span><br><span class="line">os: Darwin 18.0.0 darwin x64</span><br></pre></td></tr></table></figure><p>本系列教程基于操作系统 <code>macOS Mojave</code>，<code>windows</code> 或<code>Linux</code> 也可作参考。</p><h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><p>利用 <code>Hexo</code> 和 <code>Github Pages</code> 搭建博客的基本原理：首先通过 <code>Hexo</code> 将 <code>Markdown</code> 文件渲染生成静态网页，再将静态站点托管到 <code>Github</code> 仓库，利用 <code>Github Pages</code> 服务以网页形式显示仓库内容。</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190206003147.png" alt></p><h3 id="创建站点"><a href="#创建站点" class="headerlink" title="创建站点"></a>创建站点</h3><p>成功安装 <code>Hexo</code> 后，请执行下列命令，<code>Hexo</code> 将会在指定文件夹中新建所需要的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在目标文件夹中创建新站点，Hexo会从hexo-starter代码库clone代码到目标文件夹</span><br><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>创建站点后的文件目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── node_modules        </span><br><span class="line">├── scaffolds           </span><br><span class="line">├── source              </span><br><span class="line">├── themes              </span><br><span class="line">├── _config.yml         </span><br><span class="line">├── package-lock.json   </span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure><ul><li><code>node_modules</code>：node依赖包；</li><li><code>scaffolds</code>：模版文件夹，用户可自定义markdown模板，默认包含了以下三种模板<ul><li><code>page</code>：页面模板；</li><li><code>post</code>：文章模板；</li><li><code>draft</code>：草稿模板；</li></ul></li><li><code>source</code>：资源文件夹，存放用户所有资源；</li><li><code>themes</code>：主题文件夹；</li><li><code>_config.yml</code>：在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置，称作<code>站点配置文件</code>；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项，称作<code>主题配置文件</code>；</li></ul><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><p>使用 Hexo 生成静态文件快速而且简单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --watch</span><br></pre></td></tr></table></figure></p><p>完成后部署，让 Hexo 在生成完毕后自动部署网站，以下四个命令的作用是相同的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --deploy</span><br><span class="line">$ hexo deploy --generate</span><br><span class="line">$ hexo g -d</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><h3 id="调试站点"><a href="#调试站点" class="headerlink" title="调试站点"></a>调试站点</h3><p>Hexo 3.0 把服务器独立成了个别模块，您必须先安装 hexo-server 才能使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure><p>安装完成后，输入以下命令以启动服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器，您的网站会在 <code>http://localhost:4000</code> 下启动，效果如下：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314185517.png" alt></p><p>如果希望服务器只处理 <code>public</code> 文件夹内的文件，而不会处理文件变动，可以在<strong>静态模式</strong>下启动服务器，此模式通常用于生产环境（production mode）下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -s</span><br></pre></td></tr></table></figure><ul><li>如果希望以调试模式启动服务器：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server --debug</span><br></pre></td></tr></table></figure><ul><li>如果您想要更改端口，或是在执行时遇到了 EADDRINUSE 错误，可以在执行时使用 -p 选项指定其他端口，如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></table></figure><h3 id="部署站点"><a href="#部署站点" class="headerlink" title="部署站点"></a>部署站点</h3><p>将我们的站点部署到github上，需要三个步骤：</p><ul><li>安装 <code>hexo-deployer-git</code>：该命令需在站点文件目录下执行；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ul><li>修改配置：修改配置文件<code>_config.yml</code>中的 deploy 配置；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># type表示服务器类型，repo表示仓库地址，branch和message可省略</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt;    # https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span><br><span class="line">  branch: [branch]          # published</span><br><span class="line">  message: [message]</span><br><span class="line"></span><br><span class="line"># 您可同时使用多个 deployer，Hexo 会依照顺序执行每个 deployer</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">  type: heroku</span><br><span class="line">  repo:</span><br></pre></td></tr></table></figure><ul><li>Hexo 一键部署：如果出现错误请先检查以上各步骤是否正确设置；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>站点成功部署后，站点目录下的 <code>public</code> 文件夹会被同步到相应的 github 仓库中，可以在仓库的 Settings 下找到 GitHub Pages 网页的地址（默认为 <code>&lt;github用户名&gt;.github.io</code>），网页默认效果如下：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/15525610289408.jpg" alt></p><p>至此，一个简易的个人博客就搭建完成了。但是距离一个简洁大方、美观实用的博客系统还有很多地方需要优化。</p><h3 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h3><p>现将 Hexo 常用命令整理如下，更详细的说明参见<a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">Hexo官方文档-指令</a>：</p><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">简写</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>hexo init [folder]</code></td><td style="text-align:center"></td><td style="text-align:left">新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站</td></tr><tr><td style="text-align:center"><code>hexo new [layout] &lt;title&gt;</code></td><td style="text-align:center"><code>hexo n [layout] &lt;title&gt;</code></td><td style="text-align:left">新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <code>_config.yml</code> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来</td></tr><tr><td style="text-align:center"><code>hexo generate</code></td><td style="text-align:center"><code>hexo g</code></td><td style="text-align:left">生成静态文件 <code>-d, --deploy</code>文件生成后立即部署网站<code>-w, --watch</code>监视文件变动</td></tr><tr><td style="text-align:center"><code>hexo publish [layout] &lt;filename&gt;</code></td><td style="text-align:center"></td><td style="text-align:left">发表草稿，将草稿移动至<code>_post</code>文件夹</td></tr><tr><td style="text-align:center"><code>hexo server</code></td><td style="text-align:center"><code>hexo s</code></td><td style="text-align:left">启动服务器 <code>-p, --port</code>重设端口；<code>-s, --static</code>只使用静态文件；<code>-l, --log</code>启动日记记录，使用覆盖记录格式；</td></tr><tr><td style="text-align:center"><code>hexo deploy</code></td><td style="text-align:center"><code>hexo d</code></td><td style="text-align:left">部署网站，<code>-g, --generate</code>部署之前预先生成静态文件</td></tr><tr><td style="text-align:center"><code>hexo clean</code></td><td style="text-align:center"></td><td style="text-align:left">清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令</td></tr><tr><td style="text-align:center"><code>hexo list</code></td><td style="text-align:center"></td><td style="text-align:left">列出网站资料，Available types: page, post, route, tag, category</td></tr><tr><td style="text-align:center"><code>hexo version</code></td><td style="text-align:center"></td><td style="text-align:left">显示Hexo版本</td></tr><tr><td style="text-align:center"><code>hexo --draft</code></td><td style="text-align:center"></td><td style="text-align:left">显示 source/_drafts 文件夹中的草稿文章</td></tr><tr><td style="text-align:center"><code>hexo migrate &lt;type&gt;</code></td><td style="text-align:center"></td><td style="text-align:left">从其他博客系统 迁移内容</td></tr></tbody></table><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方文档</a></li><li><a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">GitHub+Hexo 搭建个人网站详细教程</a></li><li><a href="https://www.jianshu.com/p/d654d52f2739" target="_blank" rel="noopener">Hexo+Github Pages+Next博客搭建</a></li><li><a href="https://blog.csdn.net/qq_34290780/article/details/78230706" target="_blank" rel="noopener">mac环境下搭建hexo+github pages+next个人博客</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314172637.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; c
      
    
    </summary>
    
      <category term="搭建博客" scheme="https://liketea.xyz/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="搭建博客" scheme="https://liketea.xyz/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="教程" scheme="https://liketea.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>费曼技巧：以教促学</title>
    <link href="https://liketea.xyz/uncategorized/%E8%B4%B9%E6%9B%BC%E6%8A%80%E5%B7%A7/"/>
    <id>https://liketea.xyz/uncategorized/费曼技巧/</id>
    <published>2019-03-13T06:16:46.000Z</published>
    <updated>2019-03-19T10:43:59.522Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314143604.png" alt></p><p>中学时，常常喜欢和别人讨论一些深奥的物理或哲学问题，这些在大多数人看来枯燥乏味的内容，在我却是甘之如饴。但要找到一位志同道合或是愿意倾听、一同讨论的人是很难的，为了维系本就为数不多的几位“听众”，在每次读书时，我总会无意识地假想自己该如何把当前所学讲给他们听，设想他们可能会提出怎样的质疑，我又该如何应答，通过这种方式，逼迫自己反复斟酌逻辑、简化表达，用尽可能简单的语言向他们解释清楚最深奥的道理……到了本科，对哲学的兴趣愈加浓厚，读了从古希腊到康德时期的很多经典著作，将所读所想整理成了两册笔记，笔记本便成了我的忠实听众……后来读了计算机方面的研究生，计算机领域知识浩如烟海且日新月异，好在整个行业奉行开源共享的精神，我也慢慢学会了将自己的学习笔记和生活感悟搬到博客上来……</p><p>以上便是我在学生生涯的不同时期所采用的三种自学方法：讨论、笔记、博客。虽然不同时期所凭借的学习媒介不同，但却有着一脉相承的共同原则：</p><p><strong>与“假想听众”一同学习，反复斟酌逻辑、简化表达，直至听众完全听懂，便是真正学会</strong>。</p><p>直至近日在网上看到了对“费曼技巧”的解释，才发现自己一直默默践行的学习方法原来早就有了名字，至于费曼本人是否提出过“费曼技巧”，网上以讹传讹，无从考证，当然名称本就无关紧要，重要的是其内涵是否指向一种行之有效的学习方法。</p><h2 id="只有教会别人，才算真正学会"><a href="#只有教会别人，才算真正学会" class="headerlink" title="只有教会别人，才算真正学会"></a>只有教会别人，才算真正学会</h2><blockquote><p>著名物理学家马克斯·普朗克因为量子物理学研究而获得了诺贝尔奖，他在德国各地演讲。每次他的司机都会无意聆听讲座，不久后他就将演讲摸索的一清二楚了，于是他提议，在下个城市演讲时可以进行角色互换。于是在下个演讲中，普朗克同意并伪装成司机坐在观众群中。司机站在他的位置进行演讲……演讲取得了圆满成功。全场响起热烈的欢呼声和掌声！司机能像普朗克本人一样绘声绘色地进行演讲。但是，一位教授询问有关这个报告中的内容。司机当然不知道如何回答这个问题！尽管如此，他还是保持冷静，并且回答道：“我很惊讶，您提出这么简单的问题，即使我的司机也知道，我会让他回答这个问题”。</p></blockquote><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314142442.png" alt></p><p>你认为这个故事的主旨是什么呢？是的，司机的头脑非常敏捷。但这不是重点，这里描述了两种不同的知识：</p><ol><li>真正的“普朗克知识”：普朗克能真正了解报告中内容的深层意思（knowing something），并能向一个原本不了解报告内容的人解释明白；</li><li>表面的“司机知识”：司机只是掌握了关于专业名称和关系方面的知识（knowing the name of something），他能在恰当的时刻运用这些句子，正确地在上下文中使用专业术语，并能准确无误地呈现内容，但涉及对内容的理解方面……他却什么都不懂；</li></ol><p>表面的“司机知识”只能用于“鹦鹉学舌”，只有具备真正的“普朗克知识”才叫“真正学会”。不幸的是，大多数人都在专注于表面的“司机知识”而不自知，那么检验是否“真正学会”的标准又是什么呢？</p><blockquote><p>说他知道自己的想法但却无法表达的人, 通常并不知道他自己的想法。 </p><p align="right">– Mortimer Adler</p><br>如果你不能解释它，就说明你还不够理解它。<br><p align="right">– Albert Einstein</p></blockquote><p>也就是说：只有能教会别人，才说明掌握了真正的“普朗克知识”，才算真正学会了。</p><h2 id="只有教会别人，才能真正学会"><a href="#只有教会别人，才能真正学会" class="headerlink" title="只有教会别人，才能真正学会"></a>只有教会别人，才能真正学会</h2><p>这里我无意玩弄文字游戏，只怪汉语博大精深……“教会”和“学会”在上一句中表结果，意指能否教会别人是验证自己是否真正学会的标准；在本句中表过程，意指只有通过教会别人的这个过程，自己才能真正学会。</p><blockquote><p>one can only learn by teaching.</p><p align="right"> – Wheeler</p> </blockquote><p>费曼技巧是一种“<strong>以教促学</strong>”的学习方法：在学习某个主题时，假想自己要把它教给一个对其毫无所知的人，思考应该如何表达，在思考过程中不断<strong>发现、弥补漏洞</strong>，<strong>组织、简化表达</strong>，以致不断加深对主题的理解，当把他教会的时候自己也就真正学会了。</p><h2 id="费曼技巧的四个步骤"><a href="#费曼技巧的四个步骤" class="headerlink" title="费曼技巧的四个步骤"></a>费曼技巧的四个步骤</h2><p>人们一般将费曼技巧总结为四个步骤：</p><ol><li>确定主题：选择一个你想了解的概念，写在纸上；</li><li>教给孩子：在白纸上写下你对这个概念的解释，就好像你正在教导一位新接触这个概念的学生一样。当你这样做的时候，你会更清楚地意识到关于这个概念你理解了多少，以及是否还存在理解不清的地方；</li><li>发现漏洞：无论何时你感觉卡壳了，都要回到原始的学习资料并重新学习让你感到卡壳的那部分，直到你领会得足够顺畅，顺畅到可以在纸上解释这个部分为止；</li><li>组织简化：最终的目的，是用你自己的语言，而不是学习资料中的语言来解释概念。如果你的解释很冗长或者令人迷惑，那就说明你对概念的理解可能并没有你自己想象得那么顺畅；</li></ol><p>费曼技巧流程图：</p><p><img src="https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314142458.png" alt></p><h2 id="费曼技巧的评价"><a href="#费曼技巧的评价" class="headerlink" title="费曼技巧的评价"></a>费曼技巧的评价</h2><p>在我看来，践行“费曼技巧”有以下好处:</p><ol><li>激发学习动力：“假想听众”的存在会产生学习的责任感和使命感；</li><li>自检学习效果：人易自欺欺人，“假想听众”可以更客观地检验学习的真实效果；</li><li>完善知识体系：发现、弥补漏洞的过程就是建立知识体系的过程；</li><li>训练表达能力：“说不出来”在于没有形成自己的一套逻辑体系和语言体系；</li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://fs.blog/2012/04/feynman-technique/" target="_blank" rel="noopener">费曼技巧：学习任何东西的最佳方式</a></li><li><a href="https://www.godic.net/webting/videoplay?order=0&amp;id=b03ddc6a-7845-11e8-b55b-000c29ffef9b" target="_blank" rel="noopener">费曼技巧视频</a></li><li><a href="https://www.zhihu.com/question/20576786" target="_blank" rel="noopener">号称终极快速学习法的费曼技巧，究竟是什么样的学习方法？</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://likeitea-1257692904.cos.ap-guangzhou.myqcloud.com/liketea_blog/20190314143604.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;中学时，常常喜欢和别人讨论一些深奥的物理或哲学问
      
    
    </summary>
    
    
  </entry>
  
</feed>
